{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/logicSim/input.svelte","../../src/logicSim/output.svelte","../../src/logicSim/gate.svelte","../../src/logicSim/switch.svelte","../../src/logicSim/wire.svelte","../../src/js/simulator.js","../../src/logicSim/light.svelte","../../src/logicSim/selectionBox.svelte","../../src/logicSim/canvas.svelte","../../src/logicSim/logicSim.svelte","../../src/ChapterPage/header.svelte","../../src/ChapterPage/card.svelte","../../src/ChapterPage/title.svelte","../../src/ChapterPage/chapter.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let x_pos = 0;\r\n    export let y_pos = 0;\r\n\r\n    export let wireIndex;\r\n    export let id;\r\n\r\n    export let inputCallback;\r\n\r\n    let line_dom;\r\n    let circle_dom;\r\n\r\n    onMount(async () => {\r\n\t\tcircle_dom.style.left = x_pos + \"px\";\r\n        circle_dom.style.top = y_pos + \"px\";\r\n        circle_dom.style.backgroundImage = \"url(build/PORT_CIRCLE.svg)\";\r\n\r\n        line_dom.style.left = x_pos + 11 + \"px\";\r\n        line_dom.style.top = y_pos + 7 + \"px\";\r\n        line_dom.style.backgroundImage = \"url(build/PORT_LINE.svg)\";\r\n    });\r\n\r\n    function hoving(event) {\r\n        circle_dom.style.transform = \"scale(\" + 1.5 + \")\";\r\n    }\r\n    function leaveing() {\r\n        circle_dom.style.transform = \"scale(\" + 1 + \")\";\r\n    }\r\n    function mouseDown() {\r\n        let temp = circle_dom.parentNode.parentNode.style;\r\n        inputCallback(x_pos + parseInt(temp.left) + 8, y_pos + parseInt(temp.top) + 8, wireIndex, id);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 16px;\r\n        height: 16px;\r\n        /* background-image: url(./PORT.svg); */\r\n        background-repeat: no-repeat;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .line {\r\n        width: 16px;\r\n        height: 3px;\r\n    }\r\n</style>\r\n\r\n<div class=\"line\" bind:this={line_dom}>\r\n</div>\r\n<div class=\"port\" bind:this={circle_dom} on:mouseover={hoving} on:mouseout={leaveing} on:mousedown={mouseDown}>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let x_pos = 0;\r\n    export let y_pos = 0;\r\n\r\n    export let wireIndex;\r\n\r\n    export let id;\r\n\r\n    export let outputCallback;\r\n\r\n    let line_dom;\r\n    let circle_dom;\r\n\r\n    onMount(async () => {\r\n\t\tcircle_dom.style.left = x_pos + \"px\";\r\n        circle_dom.style.top = y_pos + \"px\";\r\n        circle_dom.style.backgroundImage = \"url(build/PORT_CIRCLE.svg)\";\r\n\r\n        line_dom.style.left = x_pos - 11 + \"px\";\r\n        line_dom.style.top = y_pos + 7 + \"px\";\r\n        line_dom.style.backgroundImage = \"url(build/PORT_LINE.svg)\";\r\n    });\r\n\r\n    function hoving(event) {\r\n        circle_dom.style.transform = \"scale(\" + 1.5 + \")\";\r\n    }\r\n    function leaveing() {\r\n        circle_dom.style.transform = \"scale(\" + 1 + \")\";\r\n    }\r\n    function mouseDown() {\r\n        let temp = circle_dom.parentNode.parentNode.style;\r\n        console.log(temp.left);\r\n        outputCallback(x_pos + parseInt(temp.left) + 8, y_pos + parseInt(temp.top) + 8, wireIndex, id);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 16px;\r\n        height: 16px;\r\n        /* background-image: url(./PORT.svg); */\r\n        background-repeat: no-repeat;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .line {\r\n        width: 16px;\r\n        height: 3px;\r\n    }\r\n</style>\r\n\r\n<div class=\"line\" bind:this={line_dom}>\r\n</div>\r\n<div class=\"port\" bind:this={circle_dom} on:mouseover={hoving} on:mouseout={leaveing} on:mousedown={mouseDown}>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n    import Input from './input.svelte';\r\n    import Output from './output.svelte';\r\n\r\n    export let x_pos = 0;\r\n    export let y_pos = 0;\r\n    export let image;\r\n\r\n    export let inputCallback;\r\n    export let outputCallback;\r\n\r\n    export let inputs;\r\n    export let outputs;\r\n    export let id;\r\n\r\n    export let grabbing;\r\n    export let released;\r\n\r\n    export let styles;\r\n\r\n    let dom;\r\n\r\n    onMount(async () => {\r\n        //Move to position assigned by the creator on startup\r\n\t\tdom.style.left = x_pos + \"px\";\r\n        dom.style.top = y_pos + \"px\";\r\n        dom.style.backgroundImage = \"url(\" + image + \")\";\r\n\r\n        dom.setAttribute('draggable', false);\r\n    });\r\n\r\n    export function updatePosition() {\r\n        if (dom) {\r\n            dom.style.left = x_pos + \"px\";\r\n            dom.style.top = y_pos + \"px\";\r\n        }\r\n    }\r\n\r\n    //Called whenever x or y position is updated externally from parent or internally\r\n    $: if (x_pos || y_pos) {\r\n        updatePosition();\r\n    } \r\n\r\n    var bigger;\r\n\r\n    $: if (inputs || outputs) {\r\n        //Update the shape of the gate to fit\r\n        if (dom) {\r\n            //console.log(\"biiger?\");\r\n            //bigger = (inputs > outputs) ? inputs : outputs;\r\n            //dom.style.height = (bigger * 16) + \"px\";\r\n        }\r\n    }\r\n\r\n    $: if (styles.isHighlighted) {\r\n        dom.classList.add(\"gateSelected\");\r\n    }\r\n    else {\r\n        if (dom) {\r\n            dom.classList.remove(\"gateSelected\");\r\n        }\r\n    }\r\n\r\n    function mouseDown() {\r\n        grabbing(id);\r\n    }\r\n\r\n    function mouseUp() {\r\n        released(id);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 32px;\r\n        height: 32px;\r\n        background-repeat: no-repeat;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .gateSelected {\r\n        filter: drop-shadow(0px 0px 3px #0079DB);\r\n    }\r\n    .gate, .connections{\r\n        position: absolute;\r\n    }\r\n</style>\r\n\r\n<div class=\"gateSelected\" bind:this={dom}>\r\n    <div class='connections'>\r\n        {#if inputs === 1}\r\n            <Input x_pos={-26} y_pos={8} wireIndex={0} id={id} inputCallback={inputCallback}/>\r\n        {:else}\r\n            {#each Array(inputs) as _, i}\r\n                <Input x_pos={-26} y_pos={i * 16} wireIndex={i} id={id} inputCallback={inputCallback}/>\r\n            {/each}\r\n        {/if}\r\n        \r\n        {#if outputs === 1}\r\n            <Output x_pos={42} y_pos={8} wireIndex={0} id={id} outputCallback={outputCallback}/>\r\n        {:else}\r\n            {#each Array(outputs) as _, i}\r\n                <Output x_pos={42} y_pos={i * 16} wireIndex={i} id={id} outputCallback={outputCallback}/>\r\n            {/each}\r\n        {/if}\r\n    </div>\r\n    <div class='gate' on:mousedown={mouseDown} on:mouseup={mouseUp}>\r\n    </div>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n    import Output from './output.svelte';\r\n\r\n    export let x_pos = 0;\r\n    export let y_pos = 0;\r\n    export let image;\r\n\r\n    export let outputCallback;\r\n\r\n    export let switchState;\r\n    export let outputs;\r\n    export let id;\r\n\r\n    let dom;\r\n\r\n    onMount(async () => {\r\n        //Move to position assigned by the creator on startup\r\n\t\tdom.style.left = x_pos + \"px\";\r\n        dom.style.top = y_pos + \"px\";\r\n        dom.style.backgroundImage = \"url(\" + image + \")\";     \r\n    });\r\n\r\n    function updatePosition() {\r\n        if (dom) {\r\n            dom.style.left = x_pos + \"px\";\r\n            dom.style.top = y_pos + \"px\";\r\n        }\r\n    }\r\n\r\n    //Called whenever x or y position is updated externally from parent or internally\r\n    $: if (x_pos || y_pos) {\r\n        updatePosition();\r\n    }\r\n\r\n    function mouseDown() {\r\n        //Change state\r\n        switchState(id);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 32px;\r\n        height: 32px;\r\n        background-repeat: no-repeat;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .gate, .connections{\r\n        position: absolute;\r\n    }\r\n</style>\r\n\r\n<div class='wrapper' bind:this={dom}>\r\n    <div class='connections'>\r\n        {#each Array(outputs) as _, i}\r\n            <Output x_pos={42} y_pos={7} id={id} outputCallback={outputCallback}/>\r\n        {/each}\r\n    </div>\r\n    <div class='gate' on:mousedown={mouseDown}>\r\n    </div>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let start_x_pos, start_y_pos;\r\n    export let end_x_pos, end_y_pos;\r\n\r\n    export let state;\r\n\r\n    let color = \"white\";\r\n\r\n    onMount(async () => {\r\n        if (state) {\r\n            //console.log(\"I want to get this function to be called\");\r\n            color = \"blue\";\r\n        }\r\n        else { color = \"white\"; }\r\n    });\r\n    \r\n    $: if (state) {\r\n        //console.log(\"I want to get this function to be called\");\r\n        color = \"blue\";\r\n    }\r\n    else { color = \"white\"; }\r\n\r\n</script>\r\n\r\n<style>\r\n\t\r\n</style>\r\n\r\n<path d=\"M {start_x_pos} {start_y_pos} \r\n    C {start_x_pos + 128} {start_y_pos}, {end_x_pos - 128} {end_y_pos}, {end_x_pos} {end_y_pos}\"\r\n    stroke=\"black\" fill=\"transparent\" stroke-width=\"6\"\r\n/>\r\n<!-- <circle cx={start_x_pos + 128} cy={start_y_pos} r=\"6\" fill=\"red\"/>\r\n<circle cx={end_x_pos - 128} cy={end_y_pos} r=\"6\" fill=\"red\"/> -->\r\n\r\n<path d=\"M {start_x_pos} {start_y_pos} \r\n    C {start_x_pos + 128} {start_y_pos}, {end_x_pos - 128} {end_y_pos}, {end_x_pos} {end_y_pos}\"\r\n    stroke={color} fill=\"transparent\" stroke-width=\"3\"\r\n/>\r\n","const not = a => ~a & 1;\r\nconst and = (values) => {\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret && values[i];\r\n  console.log(ret);\r\n  return ret;\r\n};\r\nconst nand = (values) => {\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret && values[i];\r\n  console.log(ret);\r\n  return not(ret);\r\n};\r\nconst or = (values) => {\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret || values[i];\r\n  console.log(ret);\r\n  return ret;\r\n};\r\nconst nor = (values) => {\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret || values[i];\r\n  console.log(ret);\r\n  return not(ret);\r\n};\r\nconst xor = (values) => { //Broken with more than 2 bits at the moment\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret ^ values[i];\r\n  console.log(ret);\r\n  return ret;\r\n};\r\nconst nxor = (values) => { //Broken with more than 2 bits at the moment\r\n  var ret = values[0];\r\n  console.log(values);\r\n  for (var i = 1; i < values.length; i++)\r\n    ret = ret ^ values[i];\r\n  console.log(ret);\r\n  return not(ret);\r\n};\r\n\r\nconst validateInputs = (component, inputCount) => {\r\n  for (var i = 0; i < inputCount; i++) {\r\n    if (!component.inputs[i]) {\r\n      return 0;\r\n    }\r\n  }\r\n  return 1;\r\n};\r\n\r\nfunction bus_in(component, componentLookup) { //Does not handle the case of 'x'\r\n  if (!validateInputs(component, component.in_count)) return;\r\n\r\n  var outputs = [];\r\n\r\n  for (var i = 0; i < component.in_count; i++) {\r\n    outputs.push(componentLookup[component.inputs[i].gate_id].output_states[component.inputs[i].index]);\r\n  }\r\n\r\n  component.output_states = [outputs];\r\n}\r\n\r\n//TODO - bigger bus sizes\r\nfunction bus_out(component, componentLookup) { //Does not handle the case of 'x'\r\n  //console.log(aOut);\r\n  if (!validateInputs(component, component.in_count)) return;\r\n\r\n  const aOut = componentLookup[component.inputs[0].gate_id].output_states[component.inputs[0].index];\r\n\r\n  for (var i = 0; i < component.out_count; i++) {\r\n    component.output_states[i] = aOut[i];\r\n  }\r\n}\r\n\r\nfunction d_latch(component, componentLookup) { //Does not handle the case of 'x'\r\n  if (!validateInputs(component, component.in_count)) return;\r\n  //Data\r\n  const aOut = componentLookup[component.inputs[0].gate_id];\r\n  //Clock\r\n  const bOut = componentLookup[component.inputs[1].gate_id];\r\n  //Q\r\n  component.output_states[0] = (bOut.output_states[component.inputs[1].index]) ? aOut.output_states[component.inputs[1].index] : component.output_states[0];\r\n  component.output_states[1] = not(component.output_states[0]);\r\n}\r\n\r\nexport const evaluate = (components, componentLookup) => {\r\n    const binaryOp = (logicFn, component) => {\r\n      if (!validateInputs(component, component.in_count)) return;\r\n      \r\n      var outputs = [];\r\n\r\n      for (var i = 0; i < component.in_count; i++) {\r\n        outputs.push(componentLookup[component.inputs[i].gate_id].output_states[component.inputs[i].index]);\r\n      }\r\n    \r\n      component.output_states[0] = logicFn(outputs);\r\n      return;\r\n    }\r\n\r\n  components.forEach(component => {\r\n    if (component.type === 'controlled') return;\r\n    if (component.type === 'switch') return;\r\n    if (component.type === 'light') {\r\n        if (!validateInputs(component, 1)) return;\r\n        const aOut = componentLookup[component.inputs[0].gate_id];\r\n        component.output_states[0] = aOut.output_states[component.inputs[0].index];\r\n        return;\r\n    }\r\n    if (component.type === 'and') return binaryOp(and, component);\r\n    if (component.type === 'nand') return binaryOp(nand, component);\r\n    if (component.type === 'or') return binaryOp(or, component);\r\n    if (component.type === 'nor') return binaryOp(nor, component);\r\n    if (component.type === 'xor') return binaryOp(xor, component);\r\n    if (component.type === 'xnor') return binaryOp(xnor, component);\r\n    if (component.type === 'not') {\r\n      if (!validateInputs(component, 2)) return;\r\n      const aOut = componentLookup[component.inputs[0].gate_id];\r\n      component.output_states[0] = (aOut === 'x') ? 'x' : not(aOut.output_states[component.inputs[0].index]);\r\n      return;\r\n    }\r\n    if (component.type === 'in_bus') return bus_in(component, componentLookup);\r\n    if (component.type === 'out_bus') return bus_out(component, componentLookup);\r\n    //Circuits\r\n    if (component.type === 'dLatch') return d_latch(component, componentLookup);\r\n  });\r\n};","<script>\r\n    import { onMount } from 'svelte';\r\n    import Input from './input.svelte';\r\n\r\n    export let x_pos = 0;\r\n    export let y_pos = 0;\r\n    export let image;\r\n\r\n    export let inputCallback;\r\n\r\n    export let state;\r\n    export let inputs;\r\n    export let id;\r\n\r\n    export let grabbing;\r\n    export let released;\r\n\r\n    let dom;\r\n\r\n    onMount(async () => {\r\n        //Move to position assigned by the creator on startup\r\n\t\tdom.style.left = x_pos + \"px\";\r\n        dom.style.top = y_pos + \"px\";\r\n        dom.style.backgroundImage = \"url(\" + image + \")\";\r\n    });\r\n\r\n    function updatePosition() {\r\n        if (dom) {\r\n            dom.style.left = x_pos + \"px\";\r\n            dom.style.top = y_pos + \"px\";\r\n        }\r\n    }\r\n\r\n    $: if (state) {\r\n        if (dom !== undefined)\r\n            dom.style.backgroundColor = 'blue';\r\n    }\r\n    else {\r\n        if (dom !== undefined)\r\n            dom.style.backgroundColor = 'white';\r\n    }\r\n\r\n    //Called whenever x or y position is updated externally from parent or internally\r\n    $: if (x_pos || y_pos) {\r\n        updatePosition();\r\n    }\r\n\r\n    function mouseDown() {\r\n        grabbing(id);\r\n    }\r\n\r\n    function mouseUp() {\r\n        released(id);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 32px;\r\n        height: 32px;\r\n        background-repeat: no-repeat;\r\n        position: absolute;\r\n        z-index: -1;\r\n    }\r\n    .gate, .connections{\r\n        position: absolute;\r\n    }\r\n</style>\r\n\r\n<div class='wrapper' bind:this={dom}>\r\n    <div class='connections'>\r\n        {#if inputs === 1}\r\n            <Input x_pos={-26} y_pos={8} wireIndex={0} id={id} inputCallback={inputCallback}/>\r\n        {:else}\r\n            {#each Array(inputs) as _, i}\r\n                <Input x_pos={-26} y_pos={i * 16} wireIndex={i} id={id} inputCallback={inputCallback}/>\r\n            {/each}\r\n        {/if}\r\n    </div>\r\n    <div class='gate' on:mousedown={mouseDown} on:mouseup={mouseUp}>\r\n    </div>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let start_x_pos = 0;\r\n    export let start_y_pos = 0;\r\n    export let end_x_pos = 0;\r\n    export let end_y_pos = 0;\r\n\r\n    let dom;\r\n\r\n    onMount(async () => {\r\n        //Move to position assigned by the creator on startup\r\n\t\t//dom.style.left = x_pos + \"px\";\r\n        //dom.style.top = y_pos + \"px\";\r\n        updatePosition();\r\n    });\r\n\r\n    export function updatePosition() {\r\n        if (dom) {\r\n            if (end_x_pos - start_x_pos === 0 && end_y_pos - start_y_pos === 0) {\r\n                dom.style.left = start_x_pos + \"px\";\r\n                dom.style.top = start_y_pos + \"px\";\r\n\r\n                dom.style.width = end_x_pos - start_x_pos + \"px\";\r\n                dom.style.height = end_y_pos - start_y_pos + \"px\";\r\n            }\r\n            if (end_x_pos - start_x_pos < 0 && end_y_pos - start_y_pos < 0) {\r\n                dom.style.left = end_x_pos + \"px\";\r\n                dom.style.top = end_y_pos + \"px\";\r\n\r\n                dom.style.width = start_x_pos - end_x_pos + \"px\";\r\n                dom.style.height = start_y_pos - end_y_pos + \"px\";\r\n            }\r\n            else if (end_x_pos - start_x_pos > 0 && end_y_pos - start_y_pos > 0) {\r\n                dom.style.left = start_x_pos + \"px\";\r\n                dom.style.top = start_y_pos + \"px\";\r\n\r\n                dom.style.width = end_x_pos - start_x_pos + \"px\";\r\n                dom.style.height = end_y_pos - start_y_pos + \"px\";\r\n            }\r\n            else if (end_x_pos - start_x_pos > 0 && end_y_pos - start_y_pos < 0) {\r\n                dom.style.left = start_x_pos + \"px\";\r\n                dom.style.top = end_y_pos + \"px\";\r\n\r\n                dom.style.width = end_x_pos - start_x_pos + \"px\";\r\n                dom.style.height = start_y_pos - end_y_pos + \"px\";\r\n            }\r\n            else if (end_x_pos - start_x_pos < 0 && end_y_pos - start_y_pos > 0) {\r\n                dom.style.left = end_x_pos + \"px\";\r\n                dom.style.top = start_y_pos + \"px\";\r\n\r\n                dom.style.width = start_x_pos - end_x_pos + \"px\";\r\n                dom.style.height = end_y_pos - start_y_pos + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    //Called whenever x or y position is updated externally from parent or internally\r\n    $: if (start_x_pos || start_y_pos || end_x_pos || end_y_pos) {\r\n        updatePosition();\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    .selection {\r\n        background-color: rgba(143, 236, 255, 0.25);\r\n        width: 300px;\r\n        height: 150px;\r\n        z-index: 2;\r\n        position: absolute;\r\n        text-align: center;\r\n        border-color: gray;\r\n        border-style: solid;\r\n        border-radius: 10px;\r\n    }\r\n</style>\r\n\r\n<div class=\"selection\" bind:this={dom}>\r\n        \r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n    import Gate from './gate.svelte';\r\n    import Switch from './switch.svelte';\r\n    import Wire from './wire.svelte';\r\n    import { evaluate } from '../js/simulator.js'\r\n    import Light from './light.svelte';\r\n    import Selection from './selectionBox.svelte'\r\n    import { get } from 'svelte/store';\r\n\r\n    //Simple vetor class with basic math functions\r\n    class Vector {\r\n        constructor(x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        add(v) {\r\n            this.x += v.x;\r\n            this.y += v.y;\r\n        }\r\n        sub(v) {\r\n            this.x -= v.x;\r\n            this.y -= v.y;\r\n        }\r\n        scale(n) {\r\n            this.x *= n;\r\n            this.y *= n;\r\n        }\r\n        distance(n) {\r\n            return (Math.sqrt(Math.pow(n.x - this.x,2) + Math.pow(n.y - this.y,2)));\r\n        }\r\n    };\r\n\r\n    //Creates a new list, that is the components array, but the index is the id\r\n    const indexBy = (array, prop) => array.reduce((output, item) => {\r\n        output[item[prop]] = item;\r\n        return output;\r\n    }, {});\r\n\r\n    const canInputOrOuputCountBeChanged = (type) => {\r\n        switch (type) {\r\n        case \"and\":\r\n        case \"nor\":\r\n        case \"nand\":\r\n        case \"or\":\r\n        case \"xor\":\r\n        case \"out_bus\":\r\n        case \"in_bus\":\r\n            return true;\r\n            break;\r\n        default:\r\n            return false;\r\n            break;\r\n        }\r\n    };\r\n\r\n    /*\r\n    This array contains all the gates that exist on the screen\r\n    The format for the data stored is as follows\r\n    {\r\n        id: 'name',                     //Name of the gate, identifies this exact gate\r\n        in_count: 2,                    //The number of inputs this gate has\r\n        out_count: 1,                   //The number of outputs this gate has\r\n        in_widths: [],                  //The widths of each input\r\n        out_widths: [],                 //The widths of each output\r\n        type: 'and',                    //The type of gate (used to determine function of gate by simulator)\r\n        inputs: [                       //The inputs to the gate\r\n            {                           //An input, contains data about the input\r\n                gate_id: 'bus_end',     //Id of the gate connecting to this input\r\n                index: 0,               //The index of the output of the connecting gate\r\n            },\r\n        ],\r\n        output_states: [0],             //An array of outputs the gate has\r\n\r\n        position: new Vector(0,0),      //The (x,y) position of the gate\r\n        image: \"./build/AND_GATE.svg\",  //The image used for said gate\r\n        style: {                        //Styles for the gate, will be passed to the gate in svelte, anything can be put here for any of the gate,\r\n                                        //they do not have to be consistant. Different gate types can have special style info in this array\r\n                                        //As per the spec these are suggested values that could appear in this array\r\n            isHighlighted: false,\r\n\r\n        },                     \r\n    }\r\n    */\r\n    let components = [\r\n\r\n    ];\r\n\r\n    /*\r\n    This stores the information for rendering a wire\r\n    This array is rendered item by item\r\n    The format is\r\n    {\r\n        startPos: new Vector(0, 0),     //Starting postion of the wire (aka gate output)\r\n        endPos: new Vector(0, 0),       //Ending postion of the wire (aka gate input)\r\n        id: id,                         //Id of the gate that the wire comes from\r\n        id_in: id                       //Id of the gate that the wire goes to\r\n        index: 0,                       //Index into the outputs gates outputs\r\n        state: [0],                     //The states that wire holds in an array\r\n        width: 1                        //The width of the wire\r\n    }\r\n    */\r\n    let wires = [\r\n        \r\n    ];\r\n\r\n    let nextGateID = 0;\r\n\r\n    let mousePosition;\r\n    let workspaceDom;\r\n    let zoomLayerDom;\r\n\r\n    let gridSpacing;\r\n\r\n    let isPlacing = false;\r\n    let placingComponent;\r\n\r\n    let scale = 1;\r\n    let screenPos = new Vector(0, 0);\r\n    let isGrabbing = false;\r\n    let begGrabPos;\r\n    let endGrabPos;\r\n\r\n    let isGateSelected;\r\n\r\n    let isGrabbingGate;\r\n    let gateGrabbedId;\r\n    let didGateMove;\r\n\r\n    let selectedGatesIds = [];\r\n\r\n    //Selection box\r\n    let isSelecting = false;\r\n    let isSelecting_Draw = false;\r\n    let canSelect = true;\r\n    let selectionBegin;\r\n    let selectionEnd;\r\n\r\n    export let externalData;\r\n\r\n    onMount(async () => {\r\n        //Load the users data for this lesson\r\n        console.log(\"externalData: \", externalData)\r\n        load(externalData);\r\n    });\r\n\r\n    //TODO - move without place the gate held\r\n    function mouseDown(event) {\r\n        console.log(\"click\");\r\n        //Check if mouse 2 is pressed, if so only move board\r\n        if (event.button !== 2) {\r\n            //Place a gate if mouse 1 is pressed, and is in the range of the board\r\n            if (isPlacing) {\r\n                //Add gate to componets array\r\n                components = [...components, placingComponent];\r\n                isPlacing = false;\r\n            } else if (!isSelecting && canSelect){\r\n                //Start making a selction box\r\n                isSelecting = true;\r\n                //Make sure the box is on the cursor\r\n                let zoomLayerOffset = offset(zoomLayerDom);\r\n                zoomLayerOffset.left *= (1/scale);\r\n                zoomLayerOffset.top *= (1/scale);\r\n                selectionBegin = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n                selectionEnd = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n            }\r\n        }\r\n        else {\r\n            //Moving around the workspace\r\n            isGrabbing = true;\r\n            begGrabPos = new Vector(event.pageX, event.pageY);\r\n        }\r\n    }\r\n    function mouseUp(event) {\r\n        console.log(\"click release\");\r\n        // Mouse button 1 released (left)\r\n        if (event.button === 0) {\r\n            if (isGrabbingGate && !didGateMove) {\r\n                //Clear the selection and select the new gate\r\n                clearSelection();\r\n\r\n                //Set the gate as selected\r\n                selectedGatesIds.push(gateGrabbedId);\r\n                getComponent(selectedGatesIds[0]).style.isHighlighted = true;\r\n                //Tell sevlte to update\r\n                components = components;\r\n            }\r\n            else if (didGateMove) {\r\n                //Dont unselect any thing\r\n            }\r\n            else {\r\n                //Clear the selection\r\n                clearSelection();\r\n            }\r\n            if (isSelecting) {\r\n\r\n                isSelecting = false;\r\n\r\n                if (isSelecting_Draw) {\r\n                    let zoomLayerOffset = offset(zoomLayerDom);\r\n                    zoomLayerOffset.left *= (1/scale);\r\n                    zoomLayerOffset.top *= (1/scale);\r\n                    selectionEnd = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n                    isSelecting_Draw = false;\r\n                    \r\n                    //Select the things in the box\r\n                    selectComponentsInBox(selectionBegin, selectionEnd);\r\n                }\r\n            }\r\n\r\n            //Set grabbing back to false\r\n            isGrabbingGate = false;\r\n        }\r\n        if (event.button === 2) {\r\n            //Moving around the workspace\r\n            isGrabbing = false;\r\n            endGrabPos = new Vector(event.pageX, event.pageY);\r\n\r\n            begGrabPos.sub(endGrabPos);\r\n            screenPos.sub(begGrabPos);\r\n\r\n            document.getElementById(\"zoomLayer\").style.left = screenPos.x + \"px\";\r\n            document.getElementById(\"zoomLayer\").style.top = screenPos.y + \"px\";\r\n        }\r\n    }\r\n    function mouseMove(event) {\r\n        //Keep mouse position\r\n        mousePosition = new Vector(event.pageX, event.pageY);\r\n        //Move the gate being placed to the cursor when the mouse moves\r\n        if (isPlacing) {\r\n            //Lock to grid movement\r\n            let zoomLayerOffset = offset(zoomLayerDom);\r\n            zoomLayerOffset.left *= (1/scale);\r\n            zoomLayerOffset.top *= (1/scale);\r\n            let gatePos = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n            placingComponent.position = new Vector(Math.round((gatePos.x / 32) - 0.5) * 32, Math.round((gatePos.y / 32) - 0.5) * 32);\r\n        }\r\n        //Move the wire being placed\r\n        if (isWire) {\r\n            let zoomLayerOffset = offset(zoomLayerDom);\r\n            zoomLayerOffset.left *= (1/scale);\r\n            zoomLayerOffset.top *= (1/scale);\r\n            let wirePos = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n            placingWire.endPos = new Vector(wirePos.x, wirePos.y);\r\n        }\r\n        //Moving around the workspace\r\n        if (isGrabbing) {\r\n            endGrabPos = new Vector(event.pageX, event.pageY);\r\n\r\n            var begGrabCopy = new Vector(begGrabPos.x, begGrabPos.y);\r\n\r\n            begGrabCopy.sub(endGrabPos);\r\n            screenPos.sub(begGrabCopy);\r\n\r\n            document.getElementById(\"zoomLayer\").style.left = screenPos.x + \"px\";\r\n            document.getElementById(\"zoomLayer\").style.top = screenPos.y + \"px\";\r\n\r\n            begGrabPos = new Vector(endGrabPos.x, endGrabPos.y);\r\n        }\r\n        //Moving a selection or a gate around\r\n        if (isGrabbingGate) {\r\n            //Make sure the gate grabbed is a selected gate\r\n            var isPartOfGroup = false;\r\n            for (var i = 0; i < selectedGatesIds.length; i++) {\r\n                if (selectedGatesIds[i] === gateGrabbedId)\r\n                    isPartOfGroup = true;\r\n            }\r\n\r\n            //Maybe make it so it has to move a certain distance\r\n            didGateMove = true;\r\n\r\n            if (isPartOfGroup) {\r\n                for (var i = 0; i < selectedGatesIds.length; i ++) {\r\n                    getComponent(selectedGatesIds[i]).position = new Vector(Math.round((gatePos.x / 32) - 0.5) * 32, Math.round((gatePos.y / 32) - 0.5) * 32);\r\n                }\r\n            } else {\r\n                //Lock to grid movement\r\n                let zoomLayerOffset = offset(zoomLayerDom);\r\n                zoomLayerOffset.left *= (1/scale);\r\n                zoomLayerOffset.top *= (1/scale);\r\n                let gatePos = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n                getComponent(gateGrabbedId).position = new Vector(Math.round((gatePos.x / 32) - 0.5) * 32, Math.round((gatePos.y / 32) - 0.5) * 32);\r\n            }\r\n\r\n            //SVELT NEED TO SEE AN ASGINMENT OF THE ARRAY TO KNOW THAT IT CHANGE AND TO UPDATE THE PROPS\r\n            //see https://svelte.dev/tutorial/updating-arrays-and-objects for more information\r\n            components = components;\r\n            //Move the wires with the gate\r\n            //Inputs\r\n            //console.log(getWiresById(gateGrabbedId));\r\n        }\r\n        //If the user is selecting and not dragging\r\n        if (isSelecting && !isGrabbingGate) {\r\n            //Enable once drag has become large enough\r\n            if (selectionBegin.distance(selectionEnd) > 10) {\r\n                isSelecting_Draw = true;\r\n            }\r\n            \r\n            let zoomLayerOffset = offset(zoomLayerDom);\r\n            zoomLayerOffset.left *= (1/scale);\r\n            zoomLayerOffset.top *= (1/scale);\r\n            selectionEnd = new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top);\r\n        }\r\n    }\r\n    \r\n    function keypressing(event) {\r\n        if (event.key === '=') { //Plus key\r\n            if (scale < 3)\r\n                scale += 0.25;\r\n        }\r\n        else if (event.key === '-') { //Minus key\r\n            if (scale > 0.25)\r\n                scale -= 0.25;\r\n        }\r\n        document.getElementById(\"zoomLayer\").style.transform = \"scale(\" + scale + \")\";\r\n\r\n        //Delete a gate\r\n        if (event.keyCode === 46) {\r\n            console.log(\"delete\");\r\n            removeGates();\r\n        }\r\n    }\r\n\r\n    function getWiresById(id) {\r\n        var ret_wires = [];\r\n\r\n        for (let i = 0; i < wires.length; i++) {\r\n            if (wires[i].id === id) {\r\n                ret_wires.push(wires[i].id);\r\n            }\r\n            if (wires[i].id_in === id) {\r\n                ret_wires.push(wires[i].id_in);\r\n            }\r\n        }\r\n        return ret_wires;\r\n    }\r\n\r\n    export function addGate(gateType) {\r\n        //Math for the zoom stuffs\r\n        let zoomLayerOffset = offset(zoomLayerDom);\r\n        zoomLayerOffset.left *= (1/scale);\r\n        zoomLayerOffset.top *= (1/scale);\r\n        //Sets isPlacing as a state for what to do on mouse clicks and other stuff\r\n        isPlacing = true;\r\n        //Generates a temperary component for placing\r\n        placingComponent = {\r\n            id: nextGateID.toString(),\r\n            inputs: [],\r\n            output_states: [0],\r\n            position: new Vector((1/scale) * event.pageX - zoomLayerOffset.left, (1/scale) * event.pageY - zoomLayerOffset.top),\r\n            style: {\r\n                isHighlighted: false,\r\n            },\r\n        }\r\n        //Sets the gate speccific data for gate type requested, some of the preset data may be changed\r\n        switch (gateType) {\r\n        case \"AND\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'and';\r\n            placingComponent.image = \"./build/AND_GATE.svg\";\r\n            break;\r\n        case \"NAND\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'nand';\r\n            placingComponent.image = \"./build/NAND_GATE.svg\";\r\n            break;\r\n        case \"NOT\":\r\n            placingComponent.in_count = 1;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'not';\r\n            placingComponent.image = \"./build/NOT_GATE.svg\";\r\n            break;\r\n        case \"OR\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'or';\r\n            placingComponent.image = \"./build/OR_GATE.svg\";\r\n            break;\r\n        case \"NOR\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'nor';\r\n            placingComponent.image = \"./build/NOR_GATE.svg\";\r\n            break;\r\n        case \"XOR\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'xor';\r\n            placingComponent.image = \"./build/XOR_GATE.svg\";\r\n            break;\r\n        case \"Switch\":\r\n            placingComponent.in_count = 0;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [];\r\n            placingComponent.out_widths = [1];\r\n            placingComponent.type = 'switch';\r\n            placingComponent.image = \"./build/AND_GATE.svg\";\r\n            break;\r\n        case \"Light\":\r\n            placingComponent.in_count = 1;\r\n            placingComponent.out_count = 0;\r\n            placingComponent.in_widths = [1];\r\n            placingComponent.out_widths = [];\r\n            placingComponent.type = 'light';\r\n            placingComponent.image = \"./build/Light.svg\";\r\n            break;\r\n        case \"dLatch\":\r\n            placingComponent.in_count = 2;\r\n            placingComponent.out_count = 2;\r\n            placingComponent.in_widths = [1, 1];\r\n            placingComponent.out_widths = [1, 1];\r\n            placingComponent.type = 'dLatch';\r\n            placingComponent.image = \"./build/Light.svg\";\r\n            break;\r\n        case \"in_bus\":\r\n            placingComponent.in_count = 8;\r\n            placingComponent.out_count = 1;\r\n            placingComponent.in_widths = [1, 1, 1, 1, 1, 1, 1, 1];\r\n            placingComponent.out_widths = [8];\r\n            placingComponent.type = 'in_bus';\r\n            placingComponent.image = \"./build/Light.svg\";\r\n            break;\r\n        case \"out_bus\":\r\n            placingComponent.in_count = 1;\r\n            placingComponent.out_count = 8;\r\n            placingComponent.in_widths = [8];\r\n            placingComponent.out_widths = [1, 1, 1, 1, 1, 1, 1, 1];\r\n            placingComponent.type = 'out_bus';\r\n            placingComponent.image = \"./build/Light.svg\";\r\n            break;\r\n        default:\r\n            console.log(\"Gate does not exist.\");\r\n            break;\r\n        }\r\n        //Tell svelte that the array updated\r\n        placingComponent = placingComponent;\r\n        //Incrament the gate id\r\n        nextGateID++;\r\n    }\r\n\r\n    export function removeGates() {\r\n        //Remove the currently selected gate or gates and the wires attched to the gates\r\n\r\n        //This function requires that the id exists\r\n        const getIndexIntoComponentsArray = (id) => {\r\n            for (var i = 0; i < components.length; i++) {\r\n                if (components[i].id === id)\r\n                    return i;\r\n            }\r\n        };\r\n\r\n        const removeWireByID = (id) => {\r\n            for (var i = 0; i < wires.length; i++) {\r\n                if (wires[i].id === id) {\r\n                    //Follow the output and delete data in the component\r\n                    getComponent(wires[i].id_in).inputs = [];\r\n                    //Remove the wire\r\n                    wires.splice(i, 1);\r\n                    return 1;\r\n                }\r\n                if (wires[i].id_in === id) {\r\n                    //Remove the wire\r\n                    wires.splice(i, 1);\r\n                    return 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        const remove1Gate = (id) => {\r\n            //Remove the attached wires\r\n            while (removeWireByID(id)) {}\r\n            //Remove the gate\r\n            var index = getIndexIntoComponentsArray(id);\r\n            components.splice(index, 1);\r\n        };\r\n\r\n        for (var i = 0; i < selectedGatesIds.length; i++) {\r\n            remove1Gate(selectedGatesIds[i]);\r\n        }\r\n\r\n        selectedGatesIds = [];\r\n\r\n        //Tell svelte to update the components\r\n        components = components;\r\n        wires = wires;\r\n    }\r\n\r\n    //Returns a component from an id\r\n    //TODO - consider using the componentLookup for this\r\n    function getComponent(id) {\r\n        for (let i = 0; i < components.length; i++) { \r\n            if (components[i].id === id) {\r\n                return components[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    let isWire = false;\r\n    let placingWire;\r\n\r\n    //Is called when an output node is clicked on\r\n    export function outputCallback(x_pos, y_pos, outWireIndex, id) {\r\n        //Check if the same ouput was selected (cancel the selection)\r\n        if (isWire) {\r\n            if (placingWire.id === id) {\r\n                isWire = false;\r\n                return;\r\n            }\r\n        }\r\n\r\n        canSelect = false;\r\n\r\n        //Get the component\r\n        var component = getComponent(id);\r\n\r\n        isWire = true;\r\n\r\n        let internalState = component.output_states[outWireIndex];\r\n        placingWire = {\r\n            startPos: new Vector(x_pos, y_pos),\r\n            endPos: new Vector(x_pos, y_pos),\r\n            id: id,\r\n            index: outWireIndex,\r\n            state: [internalState], //Should be 'x'?\r\n            width: component.out_widths[outWireIndex]\r\n        };\r\n    }\r\n\r\n    //Is called when an input node is clicked on\r\n    //TODO - Component conencting doesn't handle multiple outputs\r\n    export function inputCallback(x_pos, y_pos, inWireIndex, id) {\r\n        console.log(\"Input callback\");\r\n        //Checks to see if an output node was already selected, if so it connects the nodes in the system\r\n        if (isWire) {\r\n            //Check if the widths match\r\n            if (placingWire.width !== getComponent(id).in_widths[inWireIndex]) {\r\n                //Wire widths are differnt, dont connect them\r\n                return;\r\n            }\r\n            isWire = false;\r\n            placingWire.endPos = new Vector(x_pos, y_pos);\r\n            placingWire.id_in = id;\r\n            wires = [...wires, placingWire];\r\n            //Connect components in the array\r\n            for (let i = 0; i < components.length; i++) { \r\n                if (components[i].id === id) {\r\n                    components[i].inputs[inWireIndex] = {gate_id: placingWire.id, index: placingWire.index};\r\n                }\r\n            }\r\n\r\n            canSelect = true;\r\n        }\r\n    }\r\n\r\n    let gateSelected;\r\n\r\n    function gateGrabbed(id) {\r\n        console.log(\"Gate grabbed\");\r\n        //Setup some states\r\n        isGrabbingGate = true;\r\n        gateGrabbedId = id;\r\n        didGateMove = false;\r\n    }\r\n\r\n    function gateReleased(id) {\r\n        //Find out if it is a switch\r\n        if (getComponent(id).type === \"switch\") {\r\n            //If the gate didn't move, then change the state\r\n            if (!didGateMove)\r\n                switchState(id);\r\n        }\r\n\r\n        console.log(\"Gate released\");\r\n\r\n        //gateSelected = getComponent(id);\r\n        //isGateSelected = true;\r\n\r\n        \r\n        //isGrabbingGate = false;\r\n        //gateGrabbedId = -1;\r\n    }\r\n\r\n    function checkIfWireIsValid(id, isInput) {\r\n\r\n        if (isInput) {\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    function increaseWidth() {\r\n        if (!canInputOrOuputCountBeChanged(gateSelected.type))\r\n            return;\r\n        //Determine if it is a bus (slightly special case for these)\r\n        if (gateSelected.type === \"out_bus\") {\r\n            //Increase the out count\r\n            gateSelected.out_count += 1;\r\n            //Add to the in_widths\r\n            gateSelected.out_widths = [...gateSelected.out_widths, 1];\r\n            //Increase the input bus width\r\n            gateSelected.in_widths = [gateSelected.in_widths[0] + 1];\r\n        }\r\n        else if (gateSelected.type === \"in_bus\") {\r\n            //Increase the in count\r\n            gateSelected.in_count += 1;\r\n            //Add to the in_widths\r\n            gateSelected.in_widths = [...gateSelected.in_widths, 1];\r\n            //Increase the output width \r\n            gateSelected.out_widths = [gateSelected.out_widths[0] + 1];\r\n        }\r\n        else {\r\n            //Increase the in count\r\n            gateSelected.in_count += 1;\r\n            //Add to the in_widths\r\n            gateSelected.in_widths = [...gateSelected.in_widths, 1];\r\n        }\r\n\r\n        //Tells svelte to update everthing that uses the components array\r\n        components = components;\r\n\r\n    }\r\n\r\n    function decreaseWidth() {\r\n        if (!canInputOrOuputCountBeChanged(gateSelected.type))\r\n            return;\r\n        //The minimun for any gate that can change is 1\r\n        if (gateSelected.in_count === 1)\r\n            return;\r\n        //Determine if it is a bus (slightly special case for these)\r\n        if (gateSelected.type === \"out_bus\") {\r\n            //Increase the out count\r\n            gateSelected.out_count -= 1;\r\n            //remove to the in_widths\r\n            gateSelected.out_widths.pop();\r\n            gateSelected = gateSelected; //DO NOT REMOVE (NOT REDUNDANT)\r\n            //Increase the input bus width\r\n            gateSelected.in_widths = [gateSelected.in_widths[0] - 1];\r\n        }\r\n        else if (gateSelected.type === \"in_bus\") {\r\n            //Increase the in count\r\n            gateSelected.in_count -= 1;\r\n            //Add to the in_widths\r\n            gateSelected.in_widths.pop();\r\n            gateSelected = gateSelected; //DO NOT REMOVE (NOT REDUNDANT)\r\n            //Increase the output width \r\n            gateSelected.out_widths = [gateSelected.out_widths[0] - 1];\r\n        }\r\n        else {\r\n            //Increase the in count\r\n            gateSelected.in_count -= 1;\r\n            //Add to the in_widths\r\n            gateSelected.in_widths.pop();\r\n            gateSelected = gateSelected; //DO NOT REMOVE (NOT REDUNDANT)\r\n        }\r\n\r\n        //Tells svelte to update everthing that uses the components array\r\n        components = components;\r\n    }\r\n\r\n    export function debugGates() {\r\n        //Print info about all gates\r\n        console.log(\"Gate debug:\");\r\n        console.log(\"Components Array: \");\r\n        console.log(components);\r\n        console.log(\"Wires Array: \");\r\n        console.log(wires);\r\n    }\r\n\r\n    export function simulatate() {\r\n        //Idk does something lol\r\n        const componentLookup = indexBy(components, 'id');\r\n        //Run for 1 step\r\n        for (let iteration = 0; iteration < 1; iteration++) {\r\n            for (let i = 0; i < 5; i++) {\r\n                evaluate(components, componentLookup);\r\n            }\r\n        }\r\n        //Update wire states for rendering purpose (Inefficent temp code)\r\n        for (let w = 0; w < wires.length; w++) { \r\n            for (let i = 0; i < components.length; i++) { \r\n                if (components[i].id === wires[w].id) {\r\n                    wires[w].state[0] = components[i].output_states[wires[w].index];\r\n                }\r\n            }\r\n        }\r\n        //Update outputs for all the component, this is for svlete to send changes to componments that may need to use them\r\n        //If the simluator.js is brought into this file this can most likely go away\r\n        //compoents = compoents; might work instead\r\n        for (let i = 0; i < components.length; i++) { \r\n            components[i].output_states = components[i].output_states;\r\n        }\r\n    }\r\n\r\n    export function loadSetup(setupType) {\r\n        switch(setupType) {\r\n        case 'bus':\r\n\r\n            break;\r\n        default:\r\n            console.log(\"premade gate setup doesn't exsit.\");\r\n        }\r\n    }\r\n\r\n    function selectComponentsInBox(topPoint, bottomPoint) {\r\n        //Smaller point is the top, bigger is the bottom, sort them\r\n        //Correct format: p1 has the smallest x and y, p2 has the biggest x and y\r\n        var p1 = new Vector(topPoint.x < bottomPoint.x ? topPoint.x : bottomPoint.x,\r\n            topPoint.y < bottomPoint.y ? topPoint.y : bottomPoint.y);\r\n        var p2 = new Vector(topPoint.x > bottomPoint.x ? topPoint.x : bottomPoint.x,\r\n            topPoint.y > bottomPoint.y ? topPoint.y : bottomPoint.y);\r\n \r\n        //Clear the variable to hold selection\r\n        selectedGatesIds = new Array();\r\n\r\n        //Check each of the points for a collision\r\n        //1 point for each corner of an oject\r\n        //Right now, if 1 point is selected the whole get is, this can be changed later\r\n        for (var i = 0; i < components.length; i++) {\r\n            let check1 = boxPointCollisionCheck(p1, p2, components[i].position);\r\n            let check2 = boxPointCollisionCheck(p1, p2, new Vector(components[i].position.x + 32, components[i].position.y));\r\n            let check3 = boxPointCollisionCheck(p1, p2, new Vector(components[i].position.x + 32, components[i].position.y + 32));\r\n            let check4 = boxPointCollisionCheck(p1, p2, new Vector(components[i].position.x, components[i].position.y + 32));\r\n            if (check1 || check2 || check3 || check4) {\r\n                selectedGatesIds = [...selectedGatesIds, components[i].id];\r\n            }\r\n        }\r\n\r\n        //Highlight the gates the were selected\r\n        for (var i = 0; i < selectedGatesIds.length; i++) {\r\n            getComponent(selectedGatesIds[i]).style.isHighlighted = true;\r\n        }\r\n\r\n        //Tell svelte to update the objects\r\n        components = components;\r\n    }\r\n\r\n    function boxPointCollisionCheck(topPoint, bottomPoint, checkPoint) {\r\n        //Simple AABB bounds checking for the selction box and points\r\n        if (checkPoint.x > topPoint.x && checkPoint.x < bottomPoint.x) {\r\n            if (checkPoint.y > topPoint.y && checkPoint.y < bottomPoint.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function clearSelection() {\r\n        //Clear the selection and select the new gate\r\n        if (selectedGatesIds.length > 0) {\r\n            //unhighlight the selected\r\n            for (var i = 0; i < selectedGatesIds.length; i++) {\r\n                getComponent(selectedGatesIds[i]).style.isHighlighted = false;\r\n            }\r\n            //Then Unselect what is selected\r\n            selectedGatesIds = [];\r\n            //Tell svelte to update\r\n            components = components;\r\n        }\r\n    }\r\n\r\n    //TODO - will be broken, fix\r\n    function switchState(id) {\r\n        console.log(\"Called\");\r\n        let comp = getComponent(id);\r\n        if (comp.output_states[0])\r\n            comp.output_states[0] = 0;\r\n        else\r\n            comp.output_states[0] = 1;\r\n        //Rerun sim\r\n        simulatate();\r\n    }\r\n\r\n    function offset(el) {\r\n        var rect = el.getBoundingClientRect(),\r\n        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n    }\r\n\r\n    const typeToImg = {\r\n        \"and\": \"./build/AND_GATE.svg\",\r\n        \"nand\": \"./build/NAND_GATE.svg\",\r\n        \"not\": \"./build/NOT_GATE.svg\",\r\n        \"or\": \"./build/OR_GATE.svg\",\r\n        \"nor\": \"./build/NOR_GATE.svg\",\r\n        \"xor\": \"./build/XOR_GATE.svg\",\r\n        \"switch\": \"./build/AND_GATE.svg\",\r\n        \"light\": \"./build/Light.svg\",\r\n    };\r\n\r\n    function generateComponentsData(fullData) {\r\n        //Sort the options\r\n        var data = fullData.comps;\r\n        nextGateID = fullData.nextGateID;\r\n\r\n        //Clear the components array\r\n        components = [];\r\n\r\n        console.log(data);\r\n\r\n        //Fill in the missing data for the components\r\n        for (var i = 0; i < data.length; i++) {\r\n            let newComponent = {\r\n                id: data[i].id,\r\n                in_count: data[i].in_w.length,\r\n                out_count: data[i].ou_w.length,\r\n                in_widths: data[i].in_w,\r\n                out_widths: data[i].ou_w,\r\n                type: data[i].type,\r\n                inputs: data[i].in,\r\n                output_states: [],\r\n                position: data[i].pos,\r\n                image: typeToImg[data[i].type],\r\n                style: {\r\n                    isHighlighted: false\r\n                }\r\n            };\r\n            for (var k = 0; k < data[i].ou_w.length; k++)\r\n                newComponent.output_states.push(0);\r\n            components.push(newComponent);\r\n        }\r\n\r\n        //Generate the wires that connect the gates\r\n        wires = [];\r\n\r\n        const findWirePos = (component, index, total, isInput) => {\r\n            //Find where a wire should go, it is hardcoded in the html\r\n\r\n            let ret = new Vector(0, 0);\r\n\r\n            if (isInput) {\r\n                ret.x = component.position.x - 26 + 8;\r\n            }\r\n            else {\r\n                ret.x = component.position.x + 42 + 8;\r\n            }\r\n\r\n            if (total === 1) {\r\n                ret.y = component.position.y + 8 + 8;\r\n            }\r\n            else {\r\n                //This is based on the index\r\n                ret.y = component.position.y + 16 * index + 8;\r\n            }\r\n\r\n            return ret;\r\n        };\r\n\r\n        for (var i = 0; i < components.length; i++) {\r\n            for (var k = 0; k < components[i].inputs.length; k++) {\r\n                let newWire = {\r\n                    //Wire position still incorrect\r\n                    startPos: findWirePos(getComponent(components[i].inputs[k].gate_id), components[i].inputs[k].index, getComponent(components[i].inputs[k].gate_id).out_count, false),\r\n                    endPos: findWirePos(components[i], k, components[i].inputs.length, true),\r\n                    id: components[i].inputs[k].gate_id,\r\n                    id_in: components[i].id,\r\n                    index: components[i].inputs[k].index,\r\n                    state: [],\r\n                    width: components[i].in_widths[k],\r\n                }\r\n                //Add one for each width of the bus\r\n                for (var q = 0; q < components[i].in_widths[k].length; q++)\r\n                    newWire.push(0);\r\n\r\n                wires.push(newWire);\r\n            }\r\n        }\r\n\r\n        console.log(\"Component Array Built: \", components);\r\n\r\n        //Tell svelte to update stuff\r\n        components = components;\r\n        wires = wires;\r\n    }\r\n\r\n    export function load(lessonID) {\r\n        fetch(\"http://localhost:8080/api/load\", {\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            method: \"POST\", \r\n            body: JSON.stringify({\r\n                lessonID: externalData,\r\n            })\r\n        }).then(res => {\r\n            return res.json();\r\n        }).then(res => {\r\n            console.log(\"Request complete! response:\", res)\r\n            //Load the information into the components array\r\n            generateComponentsData(res.data);\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    export function save() {\r\n        //Make a post to the server with the json data to save\r\n        //Clean the data to be sent\r\n        //Remove all non essential information\r\n        let sendData = [];\r\n        for (var i = 0; i < components.length; i++) {\r\n            let entry = {\r\n                'id'   : components[i].id,\r\n                'in_w' : components[i].in_widths,\r\n                'ou_w' : components[i].out_widths,\r\n                'type' : components[i].type,\r\n                'in'   : components[i].inputs,\r\n                'pos'  : components[i].position,\r\n            };\r\n\r\n            sendData = [...sendData, entry];\r\n        }\r\n\r\n        var sendDataWithOptions = {\r\n            comps: sendData,\r\n            nextGateID: nextGateID,\r\n        }\r\n\r\n        console.log(\"Sending data: \", sendDataWithOptions);\r\n\r\n        fetch(\"http://localhost:8080/api/save\", {\r\n            headers: {\r\n                \"content-type\":\"application/json\"\r\n            },\r\n            method: \"POST\", \r\n            body: JSON.stringify({\r\n                lessonID: externalData,\r\n                lessonData: sendDataWithOptions,\r\n            })\r\n        }).then(res => {\r\n            console.log(\"Request complete! response:\", res)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // // Query the element\r\n    // const resizer = document.getElementById('dragMe');\r\n    // const leftSide = resizer.previousElementSibling;\r\n    // const rightSide = resizer.nextElementSibling;\r\n\r\n    // // The current position of mouse\r\n    // let x = 0;\r\n    // let y = 0;\r\n\r\n    // // Width of left side\r\n    // let leftWidth = 0;\r\n\r\n    // // Handle the mousedown event\r\n    // // that's triggered when user drags the resizer\r\n    // const mouseDownHandler = function(e) {\r\n    //     // Get the current mouse position\r\n    //     x = e.clientX;\r\n    //     y = e.clientY;\r\n    //     leftWidth = leftSide.getBoundingClientRect().width;\r\n\r\n    //     // Attach the listeners to `document`\r\n    //     document.addEventListener('mousemove', mouseMoveHandler);\r\n    //     document.addEventListener('mouseup', mouseUpHandler);\r\n    // };\r\n\r\n    // // Attach the handler\r\n    // resizer.addEventListener('mousedown', mouseDownHandler);\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        position: relative;\r\n\r\n        transform: scale(1);\r\n    }\r\n    .options {\r\n        background-color: lightgray;\r\n        right: 30px;\r\n        bottom: 30px;\r\n        width: 300px;\r\n        height: 150px;\r\n        z-index: 2;\r\n        position: absolute;\r\n\r\n        text-align: center;\r\n        border-color: gray;\r\n        border-style: solid;\r\n        border-radius: 10px;\r\n    }\r\n    .workspace {\r\n        background-color: #d6d6d6;\r\n    }\r\n    #zoomLayer {\r\n        /* background-image: url(./grid_dark.png); */\r\n        background-color: #1F2933;\r\n        width: 2048px;\r\n        height: 2048px;\r\n    }\r\n    .wire {\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n\r\n    .options_content {\r\n        width: 100%;\r\n        height: 135px;\r\n    }\r\n\r\n    .width_buttons {\r\n        display: flex;\r\n        justify-content: center;  \r\n        width: 100%;\r\n        height: 50px;\r\n    }\r\n\r\n    button {\r\n        width: 50px;\r\n        height: 100%;\r\n    }\r\n\r\n    p {\r\n        margin: 8px;\r\n    }\r\n\r\n    .right {\r\n        width: 100px;\r\n    }\r\n\r\n</style>\r\n\r\n<svelte:window on:mouseup={mouseUp} on:mousemove={mouseMove} on:keydown={keypressing}/>\r\n\r\n<div class=\"workspace\" bind:this={workspaceDom}>\r\n    {#if isGateSelected}\r\n    <div class=\"options\">\r\n        <div class=\"options_content\">\r\n            <p>Gate Name<p>\r\n            <input type=\"text\" id=\"fname\" name=\"fname\">\r\n            <div class=\"width_buttons\">\r\n                <button on:click={decreaseWidth}>-</button>\r\n                <p>{gateSelected.in_count}</p>\r\n                <button on:click={increaseWidth}>+</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {/if}\r\n    <div id=\"zoomLayer\" bind:this={zoomLayerDom} on:mousedown={mouseDown}>\r\n        {#if isSelecting_Draw}\r\n            <Selection start_x_pos={selectionBegin.x} start_y_pos={selectionBegin.y} end_x_pos={selectionEnd.x} end_y_pos={selectionEnd.y} />\r\n        {/if}\r\n        <div class=\"wire\">\r\n            <svg width=\"2048\" height=\"2048\">\r\n                {#each wires as wire, i}\r\n                    <Wire start_x_pos={wires[i].startPos.x} start_y_pos={wires[i].startPos.y}\r\n                        end_x_pos={wires[i].endPos.x} end_y_pos={wires[i].endPos.y} state={wires[i].state[0]}\r\n                    />\r\n                {/each}\r\n                {#if isWire}\r\n                    <Wire start_x_pos={placingWire.startPos.x} start_y_pos={placingWire.startPos.y}\r\n                        end_x_pos={placingWire.endPos.x} end_y_pos={placingWire.endPos.y} state={placingWire.state[0]}\r\n                    />\r\n                {/if}\r\n            </svg>\r\n        </div>\r\n        {#each components as gate, i}\r\n            {#if gate.type === 'light'}\r\n                <Light x_pos={components[i].position.x} y_pos={components[i].position.y} image={components[i].image}\r\n                    inputs={components[i].in_count} id={components[i].id} inputCallback={inputCallback} state={components[i].output_states[0]}\r\n                    grabbing={gateGrabbed} released={gateReleased}\r\n                />\r\n            {:else}\r\n                <Gate bind:this={gate.update} x_pos={gate.position.x} y_pos={gate.position.y}\r\n                    image={gate.image} inputs={gate.in_count} outputs={gate.out_count} id={gate.id}\r\n                    outputCallback={outputCallback} inputCallback={inputCallback} grabbing={gateGrabbed} released={gateReleased} styles={gate.style}\r\n                />\r\n            {/if}\r\n        {/each}\r\n        {#if isPlacing}\r\n            <Gate x_pos={placingComponent.position.x} y_pos={placingComponent.position.y} image={placingComponent.image}\r\n                inputs={placingComponent.in_count} outputs={placingComponent.out_count} id={placingComponent.id} styles={placingComponent.style}\r\n            />\r\n        {/if}\r\n    </div>\r\n</div>","<script>\r\n\timport { onMount } from 'svelte';\r\n\timport Canvas from './canvas.svelte';\r\n\r\n\tlet canvas;\r\n\r\n\texport let applicationState;\r\n    export let externalData;\r\n\r\n\tonMount(async () => {\r\n        //document.addEventListener('contextmenu', event => event.preventDefault());\r\n\t\t// Query the element\r\n\t\tconst resizer = document.getElementById('dragMe');\r\n\t\tconst leftSide = resizer.previousElementSibling;\r\n\t\tconst rightSide = resizer.nextElementSibling;\r\n\r\n\t\t// The current position of mouse\r\n\t\tlet x = 0;\r\n\t\tlet y = 0;\r\n\r\n\t\t// Width of left side\r\n\t\tlet leftWidth = 0;\r\n\r\n\t\t// Handle the mousedown event\r\n\t\t// that's triggered when user drags the resizer\r\n\t\tconst mouseDownHandler = function(e) {\r\n\t\t\t// Get the current mouse position\r\n\t\t\tx = e.clientX;\r\n\t\t\ty = e.clientY;\r\n\t\t\tleftWidth = leftSide.getBoundingClientRect().width;\r\n\r\n\t\t\t// Attach the listeners to `document`\r\n\t\t\tdocument.addEventListener('mousemove', mouseMoveHandler);\r\n\t\t\tdocument.addEventListener('mouseup', mouseUpHandler);\r\n\t\t};\r\n\t\t// Attach the handler\r\n\t\tresizer.addEventListener('mousedown', mouseDownHandler);\r\n\t\tconsole.log(\"Listener Added\", resizer);\r\n    });\r\n\r\n\tfunction handleClick() {\r\n\t\talert(\"pressed\");\r\n\t}\r\n\r\n\tfunction returnToLessonSelect() {\r\n\t\t//Save the lesson\r\n\t\t//Return to lesson select\r\n\t\tapplicationState(0, 0);\r\n\t}\r\n\r\n\t\r\n</script>\r\n\r\n<style>\r\n\tbutton {\r\n\t\t/* width: 90%; */\r\n\t\tbackground-color: #323F4B;\r\n\t\tmargin: 5px;\r\n\t\tborder: 0px;\r\n\t\ttransition: 0.3s;\r\n\t}\r\n\tbutton:hover {\r\n\t\tbackground-color: #009688;\r\n\t}\r\n\r\n\t.main {\r\n\t\twidth: 100%;\r\n\t\theight: 100%; \r\n\t\toverflow: hidden;\r\n\t}\r\n\t.split{\r\n\t\toverflow: hidden;\r\n\t\twidth: 100%;\r\n\t\theight: 100%; \r\n\t}\r\n\t.menu {\r\n\t\t/* width: 85px;  */\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: wrap;\r\n\t\t/* float: left;  */\r\n\t\t/* height: 100%;  */\r\n\t\tbackground-color: #1F2933;\r\n\t\tz-index: 1;\r\n\t\tposition: relative;\r\n\t}\r\n\t.canvas {\r\n\t\t/* margin-left: 85px;  */\r\n\t\theight: 100%;\r\n\t}\r\n\timg {\r\n\t\t/* width: 75px; */\r\n\t\t/* height: 50px; */\r\n\t\tdisplay : block;\r\n    \tmargin : auto;\r\n\t}\r\n\r\n\th2 {\r\n\t\tcolor: white;\r\n\t\tmargin: 10px;\r\n        /* text-align: center; */\r\n\t\t/* margin: auto; */\r\n\t}\r\n\r\n\t.resizer {\r\n\t\twidth: 10px;\r\n\t\tbackground-color: #009688;\r\n\t\tcolor: #009688;\r\n\t}\r\n\r\n\t.right {\r\n\t\twidth: 75%;\r\n\t}\r\n\t.frame {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder: none;\r\n\t\t\r\n\t}\r\n</style>\r\n\r\n<div class=\"split\" style=\"display: flex\">\r\n<!-- Left element -->\r\n<div class=\"main\">\r\n\t<div class=\"menu\">\r\n\t\t<button on:click={() => returnToLessonSelect()}>\r\n\t\t\t<h2>Back</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"AND\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"AND\"> -->\r\n\t\t\t<h2>AND</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"NAND\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"NAND\"> -->\r\n\t\t\t<h2>NAND</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"OR\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"OR\"> -->\r\n\t\t\t<h2>OR</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"NOR\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"NOR\"> -->\r\n\t\t\t<h2>NOR</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"XOR\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"XOR\"> -->\r\n\t\t\t<h2>XOR</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"NOT\")}>\r\n\t\t\t<!-- <img src=\"build/andGateMenu.svg\" alt=\"NOT\"> -->\r\n\t\t\t<h2>NOT</h2>\r\n\t\t</button>\r\n\t\t<!-- <button on:click={() => canvas.addGate(\"1\")}>1</button> -->\r\n\t\t<!-- <button on:click={() => canvas.addGate(\"0\")}>0</button> -->\r\n\t\t<button on:click={() => canvas.addGate(\"Switch\")}>\r\n\t\t\t<h2>SWITCH</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"Light\")}>\r\n\t\t\t<h2>LIGHT</h2>\r\n\t\t</button>\r\n\r\n\r\n\t\t<button on:click={() => canvas.load()}>\r\n\t\t\t<h2>LOAD</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.save()}>\r\n\t\t\t<h2>SAVE</h2>\r\n\t\t</button>\r\n\t\t<!-- <button on:click={() => canvas.addGate(\"dLatch\")}>\r\n\t\t\t<h2>D-LATCH</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"in_bus\")}>\r\n\t\t\t<h2>BUS BEGIN</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.addGate(\"out_bus\")}>\r\n\t\t\t<h2>BUS END</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.loadSetup(\"out_bus\")}>\r\n\t\t\t<h2>LOAD</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.debugGates()}>\r\n\t\t\t<h2>DEBUG</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.simulatate()}>\r\n\t\t\t<h2>PLAY</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.save()}>\r\n\t\t\t<h2>SAVE</h2>\r\n\t\t</button>\r\n\t\t<button on:click={() => canvas.load()}>\r\n\t\t\t<h2>LOAD</h2>\r\n\t\t</button> -->\r\n\t</div>\r\n\t<div class=\"canvas\">\r\n\t\t<Canvas externalData={externalData} bind:this={canvas}/>\r\n\t</div>\r\n</div>\r\n\r\n\r\n<!-- The resizer -->\r\n<div class=\"resizer\" id=\"dragMe\"></div>\r\n\r\n<!-- Right element -->\r\n<div class=\"right\">\r\n    <iframe class=\"frame\" src=\"./build/lessons/lesson1/lesson1.html\" title=\"W3Schools Free Online Web Tutorials\"></iframe>\r\n</div>\r\n\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n\tonMount(async () => {\r\n        //document.addEventListener('contextmenu', event => event.preventDefault());       \r\n    });\r\n\r\n</script>\r\n\r\n<style>\r\n    .main {\r\n        width: 100%;\r\n        height: 100px;\r\n        background-color: #70c4bc;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .profile {\r\n        margin-left: 6%;\r\n        display: flex;\r\n        /* align-content: center; */\r\n    }\r\n    .picture {\r\n        margin: auto;\r\n        margin-top: 12.5px;\r\n        width: 75px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n    }\r\n    .name {\r\n        padding-left: 20px;\r\n        font-size: 18pt;\r\n        font-weight: 500;\r\n    }\r\n    .logout {\r\n        display: flex;\r\n        margin-right: 6%;\r\n    }\r\n    .logout_button {\r\n        margin: auto;\r\n        background-color: #c49270; /* Green */\r\n        border: none;\r\n        color: black;\r\n        padding: 10px 28px;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        font-size: 16px;\r\n        border-radius: 10%;\r\n        font-size: 22px;\r\n        font-weight: 600;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"main\">\r\n    <div class=\"profile\">\r\n        <img class=\"picture\" alt=\"Profile\" src=\"build/prof_icon_fix.png\">\r\n        <p class=\"name\">User Name</p>\r\n    </div>\r\n    <div class=\"logout\">\r\n        <button class=\"logout_button\">Logout</button>\r\n    </div>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n\tonMount(async () => {\r\n        \r\n    });\r\n\r\n    const checkForLesson = (lessonID) => {\r\n        for (var i = 0; i < lessons.length; i++) {\r\n            if (lessonID == lessons[i].lessonID) {\r\n                console.log(\"Match\");\r\n                return true;\r\n            }\r\n        }\r\n        console.log(\"No Match\");\r\n        return false;\r\n    };\r\n    \r\n    export let cardInfo;\r\n\r\n    export let lessons;\r\n\r\n    export let pressed;\r\n\r\n</script>\r\n\r\n<style>\r\n    .card {\r\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n        background-color: #323F4B; \r\n        transition: 0.3s;\r\n        width: 23.5%;\r\n        height: 300px;\r\n        margin: 0.75%;\r\n        /* flex-grow: 1; */\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .card:hover {\r\n        background-color: #009688;\r\n        /* box-shadow: 0 4px 8px 0 rgba(0,41,37,0.2); */\r\n    }\r\n\r\n    img {\r\n        border-radius: 5px 5px 0 0;\r\n        width: 65%;\r\n        padding-left: 17.5%;\r\n    }\r\n\r\n    .container {\r\n        padding: 2px 16px;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    h4 {\r\n        font-size: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    p, h4 {\r\n        color: white;\r\n        text-align: center;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"card\" on:click={pressed(cardInfo.lessonID)}>\r\n    <div class=\"slide-fwd-center\">\r\n        <div class=\"container\">\r\n            <h4><b>{cardInfo.name}</b></h4> \r\n            <!-- <p>Test Line i cansdiuhfauisdhfg uh fhsad fuih sdui fhsui fhius hfiu hsd fuyihsda</p>  -->\r\n            {#if checkForLesson(cardInfo.lessonID)}\r\n                <!-- <img class=\"check\" src=\"build/star.svg\" alt=\"check\"> -->\r\n                <img class=\"check\" src=\"build/green_check.svg\" alt=\"check\">\r\n                <!-- <p>Completed</p> -->\r\n            {:else}\r\n                <img class=\"no_check\" src=\"build/red_x.svg\" alt=\"no_check\">\r\n                <!-- <p>Incomplete</p> -->\r\n            {/if}\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n\r\n\tonMount(async () => {\r\n        //document.addEventListener('contextmenu', event => event.preventDefault());       \r\n    });\r\n    \r\n    export let titleInfo;\r\n\r\n</script>\r\n\r\n<style>\r\n    .title {\r\n        width: 100%;\r\n    }\r\n    h1 {\r\n        color: white;\r\n    }\r\n</style>\r\n\r\n<div class=\"title\">\r\n    <h1>{titleInfo.name}</h1>\r\n</div>","<script>\r\n    import { onMount } from 'svelte';\r\n    import Header from './header.svelte'\r\n    import Tile from './card.svelte'\r\n    import Title from './title.svelte'\r\n\r\n    export let applicationState;\r\n    export let externalData;\r\n\r\n    var userData;\r\n\r\n\tonMount(async () => {\r\n        fetch('http://localhost:8080/userInfo').then(r => {\r\n            console.log(r);\r\n            r.json().then(res => {\r\n                console.log(res);\r\n                userData = res;\r\n            });\r\n        });\r\n    })\r\n    \r\n    let titles = [\r\n        {  \r\n            name: 'Chapter 1 - Basic Gates',\r\n            lessons: [\r\n                {\r\n                    name: 'NAND Gate',\r\n                    lessonID: 10\r\n                },\r\n                {\r\n                    name: 'AND Gate',\r\n                    lessonID: 11\r\n                },\r\n                { name: 'Test', lessonID: 12 },\r\n                { name: 'Test', lessonID: 13 },\r\n                { name: 'Test', lessonID: 14 },\r\n                { name: 'Test', lessonID: 15 },\r\n                { name: 'Test', lessonID: 16 },\r\n                { name: 'Test', lessonID: 17 },\r\n                { name: 'Test', lessonID: 18 },\r\n            ]\r\n        },\r\n        { \r\n            name: 'Chapter 2 - Basic Circuits',\r\n            lessons: [\r\n                {\r\n                    name: 'SR-Latch',\r\n                    lessonID: 10\r\n                },\r\n                {\r\n                    name: 'D-Latch',\r\n                    lessonID: 11\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n\r\n    function lesssonSelectionCallback(lessonID) {\r\n        console.log(\"lesssonSelectionCallback: \", lessonID);\r\n\r\n        //Load the logic sim and pass the lessonID to it\r\n        applicationState(\"sim\", lessonID);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    .main {\r\n        width: 100%;\r\n        background-color: #1F2933;\r\n    }\r\n    .lessons {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        justify-content: flex-start;\r\n    }\r\n    .chapters {\r\n        margin-left: 14%;\r\n        margin-right: 14%;\r\n    }\r\n</style>\r\n\r\n<div class=\"main\">\r\n    <Header></Header>\r\n    {#if userData}\r\n        <div class=\"chapters\">\r\n            {#each titles as title, i}\r\n                <Title titleInfo={title}></Title>\r\n                <div class=\"lessons\">\r\n                    {#each title.lessons as card, k}\r\n                        <Tile cardInfo={card} lessons={userData.lessonsCompleted} pressed={lesssonSelectionCallback}></Tile>\r\n                    {/each}\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    {/if}\r\n</div>","<script>\r\n\timport LogicSim from './logicSim/logicSim.svelte';\r\n\timport Chapter from './ChapterPage/chapter.svelte'\r\n\r\n\tfunction appState(NewState, NewData) {\r\n\t\tstate = NewState;\r\n\t\tdata = NewData;\r\n\t}\r\n\r\n\tvar state = 0;\r\n\tvar data;\r\n\r\n</script>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\t/* this will apply to <body> */\r\n\t\tpadding: 0;\r\n\t}\r\n</style>\r\n\r\n<!-- {#if state === 0 }\r\n\t<Chapter applicationState={appState} externalData={data}></Chapter>\r\n{:else} -->\r\n\t<LogicSim applicationState={appState} externalData={data}></LogicSim>\r\n<!-- {/if} -->","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":[],"mappings":";;;;;IAAA,SAAS,IAAI,GAAG,GAAG;IAWnB,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAAS,GAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;IAID,SAAS,QAAQ,CAAC,GAAG,EAAE;IACvB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;IACzC,CAAC;IAMD,SAAS,SAAS,CAAC,KAAK,EAAE,GAAG,SAAS,EAAE;IACxC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;IAChD,IAAI,OAAO,KAAK,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;IACjE,CAAC;IACD,SAAS,eAAe,CAAC,KAAK,EAAE;IAChC,IAAI,IAAI,KAAK,CAAC;IACd,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;IACvC,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AAyID;IACA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IACD,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;IACzB,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAgBD,SAAS,WAAW,CAAC,IAAI,EAAE;IAC3B,IAAI,OAAO,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IACD,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAsBD,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;IA2DD,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAkDD,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IAChD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC;IA+ED,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAClD,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AAmLD;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;IACD,SAAS,qBAAqB,GAAG;IACjC,IAAI,IAAI,CAAC,iBAAiB;IAC1B,QAAQ,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;IAC5E,IAAI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAID,SAAS,OAAO,CAAC,EAAE,EAAE;IACrB,IAAI,qBAAqB,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;AAuCD;IACA,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;IAKD,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAID,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,SAAS,KAAK,GAAG;IACjB,IAAI,IAAI,QAAQ;IAChB,QAAQ,OAAO;IACf,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,GAAG;IACP;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,SAAS,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7C,YAAY,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;IACpB,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;IAeD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,CAAC;IACX,SAAS,YAAY,GAAG;IACxB,IAAI,MAAM,GAAG;IACb,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,MAAM;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IACnB,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC/B,YAAY,OAAO;IACnB,QAAQ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;IAC5B,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;AAwSD;IACA,MAAM,OAAO,IAAI,OAAO,MAAM,KAAK,WAAW;IAC9C,MAAM,MAAM;IACZ,MAAM,OAAO,UAAU,KAAK,WAAW;IACvC,UAAU,UAAU;IACpB,UAAU,MAAM,CAAC,CAAC;IA6RlB,SAAS,gBAAgB,CAAC,KAAK,EAAE;IACjC,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC;IACvB,CAAC;IAID,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IACnE,IAAI,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC1E,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC,aAAa,EAAE;IACxB;IACA,QAAQ,mBAAmB,CAAC,MAAM;IAClC,YAAY,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACzE,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IACnD,aAAa;IACb,iBAAiB;IACjB;IACA;IACA,gBAAgB,OAAO,CAAC,cAAc,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvC,SAAS,CAAC,CAAC;IACX,KAAK;IACL,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC5B,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAC/B,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAChD;IACA;IACA,QAAQ,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IACpB,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7F,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,IAAI;IACjB;IACA,QAAQ,KAAK;IACb,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;IAC7E;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK;IACb,QAAQ,UAAU,EAAE,KAAK;IACzB,KAAK,CAAC;IACN,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,KAAK;IACxE,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;IACnE,gBAAgB,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,CAAC;IACV,UAAU,EAAE,CAAC;IACb,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B;IACA,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACpE,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAC7B,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClC,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IAC1F,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IA8CD;IACA;IACA;IACA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,CAAC,OAAO,EAAE;IAClB,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;IACvC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;IAClC,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1C,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IACD,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAgBD,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;IAC9F,IAAI,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvG,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,IAAI,oBAAoB;IAC5B,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,OAAO,MAAM;IACjB,QAAQ,YAAY,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1F,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACjC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,YAAY,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE;IACA,QAAQ,YAAY,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IASD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAClC,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;IAC/B,QAAQ,OAAO;IACf,IAAI,YAAY,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACrC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;IACzF,QAAQ,IAAI,GAAG,GAAG,gDAAgD,CAAC;IACnE,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;IAC3E,YAAY,GAAG,IAAI,+DAA+D,CAAC;IACnF,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1C,IAAI,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,+BAA+B,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,IAAI,cAAc,GAAG,GAAG;IACxB,IAAI,aAAa,GAAG,GAAG;IACvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDCvlDuD,GAAM;mDAAe,GAAQ;qDAAgB,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAnD9F,KAAK,GAAG,CAAC;WACT,KAAK,GAAG,CAAC;WAET,SAAS;WACT,EAAE;WAEF,aAAa;SAEpB,QAAQ;SACR,UAAU;;KAEd,OAAO;sBACT,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;sBAC9B,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;sBACnC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,4BAA4B;sBAE/D,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI;sBACvC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI;sBACrC,QAAQ,CAAC,KAAK,CAAC,eAAe,GAAG,0BAA0B;;;cAGtD,MAAM,CAAC,KAAK;sBACjB,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG;;;cAE5C,QAAQ;sBACb,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAG;;;cAE1C,SAAS;UACV,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK;MACjD,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,SAAS,EAAE,EAAE;;;;;;;;;;;OAoBvE,QAAQ;;;;;;;OAER,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDCEgB,GAAM;mDAAe,GAAQ;qDAAgB,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WArD9F,KAAK,GAAG,CAAC;WACT,KAAK,GAAG,CAAC;WAET,SAAS;WAET,EAAE;WAEF,cAAc;SAErB,QAAQ;SACR,UAAU;;KAEd,OAAO;sBACT,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;sBAC9B,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;sBACnC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,4BAA4B;sBAE/D,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI;sBACvC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI;sBACrC,QAAQ,CAAC,KAAK,CAAC,eAAe,GAAG,0BAA0B;;;cAGtD,MAAM,CAAC,KAAK;sBACjB,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG;;;cAE5C,QAAQ;sBACb,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAG;;;cAE1C,SAAS;UACV,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK;MACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;MACrB,cAAc,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,SAAS,EAAE,EAAE;;;;;;;;;;;OAoBxE,QAAQ;;;;;;;OAER,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBCuCpB,KAAK,YAAC,GAAM;;;;sCAAjB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;uBAAC,KAAK,YAAC,GAAM;;;;qCAAjB,MAAI;;;;;;;;;;;;;;;;8BAAJ,MAAI;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAFS,EAAE;eAAS,CAAC;mBAAa,CAAC;mBAAM,GAAE;yCAAiB,GAAa;;;;;;;;;;;;;;;wDAAhC,GAAE;wFAAiB,GAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAG5D,EAAE;qBAAS,GAAC,OAAG,EAAE;yBAAa,GAAC;mBAAM,GAAE;yCAAiB,GAAa;;;;;;;;;;;;;;;wDAAhC,GAAE;wFAAiB,GAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAOjF,KAAK,aAAC,GAAO;;;;oCAAlB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;qBAAC,KAAK,aAAC,GAAO;;;;mCAAlB,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;;;sCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAFS,EAAE;eAAS,CAAC;mBAAa,CAAC;mBAAM,GAAE;2CAAkB,GAAc;;;;;;;;;;;;;;;yDAAlC,GAAE;4FAAkB,GAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAG9D,EAAE;qBAAS,GAAC,OAAG,EAAE;yBAAa,GAAC;mBAAM,GAAE;2CAAkB,GAAc;;;;;;;;;;;;;;;yDAAlC,GAAE;4FAAkB,GAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAZzF,GAAM,QAAK,CAAC;;;;;;;;;;sBAQZ,GAAO,QAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAQU,GAAS;iDAAc,GAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAvGnD,KAAK,GAAG,CAAC;WACT,KAAK,GAAG,CAAC;WACT,KAAK;WAEL,aAAa;WACb,cAAc;WAEd,MAAM;WACN,OAAO;WACP,EAAE;WAEF,QAAQ;WACR,QAAQ;WAER,MAAM;SAEb,GAAG;;KAEP,OAAO;;sBAET,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;;sBACvB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;sBAC5B,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG;MAEhD,GAAG,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK;;;cAGvB,cAAc;UACtB,GAAG;uBACH,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;uBAC7B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;;;;SAShC,MAAM;;cAoBD,SAAS;MACd,QAAQ,CAAC,EAAE;;;cAGN,OAAO;MACZ,QAAQ,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;OAqBkB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAlD7B,KAAK,IAAI,KAAK;QACjB,cAAc;;;;;;;WAcX,MAAM,CAAC,aAAa;QACvB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc;;YAG5B,GAAG;SACH,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCFpB,EAAE;eAAS,CAAC;mBAAM,GAAE;2CAAkB,GAAc;;;;;;;;;;;;;;;wDAAlC,GAAE;4FAAkB,GAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBADhE,KAAK,aAAC,GAAO;;;;oCAAlB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAIsB,GAAS;;;;;;qBAJ9B,KAAK,aAAC,GAAO;;;;mCAAlB,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;;;sCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WArDC,KAAK,GAAG,CAAC;WACT,KAAK,GAAG,CAAC;WACT,KAAK;WAEL,cAAc;WAEd,WAAW;WACX,OAAO;WACP,EAAE;SAET,GAAG;;KAEP,OAAO;;sBAET,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;;sBACvB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;sBAC5B,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG;;;cAG3C,cAAc;UACf,GAAG;uBACH,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;uBAC7B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;;;;cAS3B,SAAS;;MAEd,WAAW,CAAC,EAAE;;;;;;;;;;;OAkBU,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAxBxB,KAAK,IAAI,KAAK;QACjB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECFV,GAAW,4BAAG,GAAW,uCAC9B,GAAW,MAAG,GAAG,0BAAG,GAAW,4BAAI,GAAS,MAAG,GAAG,wBAAG,GAAS,2BAAI,GAAS,0BAAG,GAAS;;;;;mEAMlF,GAAW,4BAAG,GAAW,uCAC9B,GAAW,MAAG,GAAG,0BAAG,GAAW,4BAAI,GAAS,MAAG,GAAG,wBAAG,GAAS,2BAAI,GAAS,0BAAG,GAAS;2CAClF,GAAK;;;;;;;;;;;;;;sIATL,GAAW,4BAAG,GAAW,uCAC9B,GAAW,MAAG,GAAG,0BAAG,GAAW,4BAAI,GAAS,MAAG,GAAG,wBAAG,GAAS,2BAAI,GAAS,0BAAG,GAAS;;;;sIAMlF,GAAW,4BAAG,GAAW,uCAC9B,GAAW,MAAG,GAAG,0BAAG,GAAW,4BAAI,GAAS,MAAG,GAAG,wBAAG,GAAS,2BAAI,GAAS,0BAAG,GAAS;;;;;4CAClF,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;WApCF,WAAW,gBAAE,WAAW;WACxB,SAAS,gBAAE,SAAS;WAEpB,KAAK;SAEZ,KAAK,GAAG,OAAO;;KAEnB,OAAO;UACC,KAAK;;uBAEL,KAAK,GAAG,MAAM;;uBAEX,KAAK,GAAG,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAGnB,KAAK;;wBAER,KAAK,GAAG,MAAM;;wBAEX,KAAK,GAAG,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICtB1B,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK;IACxB,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACxC,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;IACF,MAAM,IAAI,GAAG,CAAC,MAAM,KAAK;IACzB,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACxC,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,MAAM,EAAE,GAAG,CAAC,MAAM,KAAK;IACvB,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACxC,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;IACF,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK;IACxB,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACxC,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK;IACxB,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACxC,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,EAAE,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;AASF;IACA,MAAM,cAAc,GAAG,CAAC,SAAS,EAAE,UAAU,KAAK;IAClD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;IACvC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC9B,MAAM,OAAO,CAAC,CAAC;IACf,KAAK;IACL,GAAG;IACH,EAAE,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;AACF;IACA,SAAS,MAAM,CAAC,SAAS,EAAE,eAAe,EAAE;IAC5C,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,OAAO;AAC7D;IACA,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC;AACnB;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;IAC/C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxG,GAAG;AACH;IACA,EAAE,SAAS,CAAC,aAAa,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;AACD;IACA;IACA,SAAS,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE;IAC7C;IACA,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,OAAO;AAC7D;IACA,EAAE,MAAM,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACrG;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;IAChD,IAAI,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,GAAG;IACH,CAAC;AACD;IACA,SAAS,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE;IAC7C,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,OAAO;IAC7D;IACA,EAAE,MAAM,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC5D;IACA,EAAE,MAAM,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAC5D;IACA,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC5J,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;AACD;IACO,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,eAAe,KAAK;IACzD,IAAI,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,SAAS,KAAK;IAC7C,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,OAAO;IACjE;IACA,MAAM,IAAI,OAAO,GAAG,EAAE,CAAC;AACvB;IACA,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;IACnD,QAAQ,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5G,OAAO;IACP;IACA,MAAM,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;IACpD,MAAM,OAAO;IACb,MAAK;AACL;IACA,EAAE,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI;IAClC,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,YAAY,EAAE,OAAO;IAChD,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE,OAAO;IAC5C,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;IACpC,QAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,OAAO;IAClD,QAAQ,MAAM,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAClE,QAAQ,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnF,QAAQ,OAAO;IACf,KAAK;IACL,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAClE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACpE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAChE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAClE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAClE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE,OAAO,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACpE,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE;IAClC,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,OAAO;IAChD,MAAM,MAAM,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IAChE,MAAM,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7G,MAAM,OAAO;IACb,KAAK;IACL,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE,OAAO,MAAM,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IAC/E,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,EAAE,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IACjF;IACA,IAAI,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IAChF,GAAG,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;sBC3DkB,KAAK,YAAC,GAAM;;;;oCAAjB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;qBAAC,KAAK,YAAC,GAAM;;;;mCAAjB,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;;;sCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAFS,EAAE;eAAS,CAAC;mBAAa,CAAC;mBAAM,GAAE;yCAAiB,GAAa;;;;;;;;;;;;;;;uDAAhC,GAAE;wFAAiB,GAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAG5D,EAAE;qBAAS,GAAC,OAAG,EAAE;yBAAa,GAAC;mBAAM,GAAE;yCAAiB,GAAa;;;;;;;;;;;;;;;uDAAhC,GAAE;wFAAiB,GAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAJvF,GAAM,QAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAQW,GAAS;iDAAc,GAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA5EnD,KAAK,GAAG,CAAC;WACT,KAAK,GAAG,CAAC;WACT,KAAK;WAEL,aAAa;WAEb,KAAK;WACL,MAAM;WACN,EAAE;WAEF,QAAQ;WACR,QAAQ;SAEf,GAAG;;KAEP,OAAO;;sBAET,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;;sBACvB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;sBAC5B,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG;;;cAG3C,cAAc;UACf,GAAG;uBACH,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI;uBAC7B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;;;;cAkB3B,SAAS;MACd,QAAQ,CAAC,EAAE;;;cAGN,OAAO;MACZ,QAAQ,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;OAkBa,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WArCxB,KAAK;YACJ,GAAG,KAAK,SAAS,kBACjB,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM;;YAGlC,GAAG,KAAK,SAAS,kBACjB,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,OAAO;;;;;;WAIpC,KAAK,IAAI,KAAK;QACjB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WCzCP,WAAW,GAAG,CAAC;WACf,WAAW,GAAG,CAAC;WACf,SAAS,GAAG,CAAC;WACb,SAAS,GAAG,CAAC;SAEpB,GAAG;;KAEP,OAAO;;;;MAIH,cAAc;;;cAGF,cAAc;UACtB,GAAG;WACC,SAAS,GAAG,WAAW,KAAK,CAAC,IAAI,SAAS,GAAG,WAAW,KAAK,CAAC;wBAC9D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,GAAG,IAAI;wBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,GAAG,IAAI;wBAElC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;wBAChD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;;;WAEjD,SAAS,GAAG,WAAW,GAAG,CAAC,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC;wBAC1D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,GAAG,IAAI;wBACjC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI;wBAEhC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI;wBAChD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI;kBAE5C,SAAS,GAAG,WAAW,GAAG,CAAC,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC;wBAC/D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,GAAG,IAAI;wBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,GAAG,IAAI;wBAElC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;wBAChD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;kBAE5C,SAAS,GAAG,WAAW,GAAG,CAAC,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC;wBAC/D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,GAAG,IAAI;wBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI;wBAEhC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;wBAChD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI;kBAE5C,SAAS,GAAG,WAAW,GAAG,CAAC,IAAI,SAAS,GAAG,WAAW,GAAG,CAAC;wBAC/D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,GAAG,IAAI;wBACjC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,GAAG,IAAI;wBAElC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI;wBAChD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,IAAI;;;;;;;;;;;;;OA0B/B,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WApB1B,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS;QACvD,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCCo+BF,GAAY,KAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDADP,GAAa;wDAEb,GAAa;;;;;;;yFAD3B,GAAY,KAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAQL,GAAc,IAAC,CAAC;wCAAe,GAAc,IAAC,CAAC;oCAAa,GAAY,KAAC,CAAC;oCAAa,GAAY,KAAC,CAAC;;;;;;;;;;;;;;;iGAArG,GAAc,IAAC,CAAC;iGAAe,GAAc,IAAC,CAAC;4FAAa,GAAY,KAAC,CAAC;4FAAa,GAAY,KAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAKlG,GAAK,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;+BAAe,GAAK,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;6BACzD,GAAK,UAAC,GAAC,MAAE,MAAM,CAAC,CAAC;6BAAa,GAAK,UAAC,GAAC,MAAE,MAAM,CAAC,CAAC;yBAAS,GAAK,UAAC,GAAC,MAAE,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;wEADpE,GAAK,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;wEAAe,GAAK,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;sEACzD,GAAK,UAAC,GAAC,MAAE,MAAM,CAAC,CAAC;sEAAa,GAAK,UAAC,GAAC,MAAE,MAAM,CAAC,CAAC;kEAAS,GAAK,UAAC,GAAC,MAAE,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAIpE,GAAW,KAAC,QAAQ,CAAC,CAAC;qCAAe,GAAW,KAAC,QAAQ,CAAC,CAAC;mCAC/D,GAAW,KAAC,MAAM,CAAC,CAAC;mCAAa,GAAW,KAAC,MAAM,CAAC,CAAC;+BAAS,GAAW,KAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;uFAD7E,GAAW,KAAC,QAAQ,CAAC,CAAC;uFAAe,GAAW,KAAC,QAAQ,CAAC,CAAC;qFAC/D,GAAW,KAAC,MAAM,CAAC,CAAC;qFAAa,GAAW,KAAC,MAAM,CAAC,CAAC;iFAAS,GAAW,KAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAY/D,GAAI,KAAC,QAAQ,CAAC,CAAC;sBAAS,GAAI,KAAC,QAAQ,CAAC,CAAC;sBACjE,GAAI,KAAC,KAAK;uBAAU,GAAI,KAAC,QAAQ;wBAAW,GAAI,KAAC,SAAS;mBAAM,GAAI,KAAC,EAAE;yCAC9D,GAAc;uCAAiB,GAAa;gCAAY,GAAW;iCAAY,GAAY;uBAAU,GAAI,KAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;sEAF9F,GAAI,KAAC,QAAQ,CAAC,CAAC;sEAAS,GAAI,KAAC,QAAQ,CAAC,CAAC;sEACjE,GAAI,KAAC,KAAK;uEAAU,GAAI,KAAC,QAAQ;wEAAW,GAAI,KAAC,SAAS;mEAAM,GAAI,KAAC,EAAE;uEACuC,GAAI,KAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAPrH,GAAU,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;8BAAS,GAAU,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;8BAAS,GAAU,UAAC,GAAC,MAAE,KAAK;+BACvF,GAAU,UAAC,GAAC,MAAE,QAAQ;2BAAM,GAAU,UAAC,GAAC,MAAE,EAAE;yCAAiB,GAAa;8BAAS,GAAU,UAAC,GAAC,MAAE,aAAa,CAAC,CAAC;kCAC9G,GAAW;mCAAY,GAAY;;;;;;;;;;;;;;;6EAFnC,GAAU,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;6EAAS,GAAU,UAAC,GAAC,MAAE,QAAQ,CAAC,CAAC;6EAAS,GAAU,UAAC,GAAC,MAAE,KAAK;8EACvF,GAAU,UAAC,GAAC,MAAE,QAAQ;0EAAM,GAAU,UAAC,GAAC,MAAE,EAAE;6EAAuC,GAAU,UAAC,GAAC,MAAE,aAAa,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAF3H,GAAI,KAAC,IAAI,KAAK,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAab,GAAgB,IAAC,QAAQ,CAAC,CAAC;oCAAS,GAAgB,IAAC,QAAQ,CAAC,CAAC;oCAAS,GAAgB,IAAC,KAAK;qCAC/F,GAAgB,IAAC,QAAQ;sCAAW,GAAgB,IAAC,SAAS;iCAAM,GAAgB,IAAC,EAAE;qCAAU,GAAgB,IAAC,KAAK;;;;;;;;;;;;;;;0FADtH,GAAgB,IAAC,QAAQ,CAAC,CAAC;0FAAS,GAAgB,IAAC,QAAQ,CAAC,CAAC;0FAAS,GAAgB,IAAC,KAAK;2FAC/F,GAAgB,IAAC,QAAQ;4FAAW,GAAgB,IAAC,SAAS;uFAAM,GAAgB,IAAC,EAAE;2FAAU,GAAgB,IAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCA9CtI,GAAc;0CAcV,GAAgB;kCAKN,GAAK;;;;sCAAV,MAAI;;;;;;;;gCAKD,GAAM;qCAOZ,GAAU;;;;oCAAf,MAAI;;;;;;;;mCAaD,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDA/CK,GAAO;yDAAgB,GAAS;yDAAc,GAAW;qDAgBrB,GAAS;;;;;;;8BAb/D,GAAc;;gCAcV,GAAgB;;;;;;;;;;;;;;;;;;;;;;;;iCAKN,GAAK;;;;qCAAV,MAAI;;;;;;;;;;;;;;;;8BAAJ,MAAI;;;;;;;sBAKD,GAAM;;;;;;;;;;;;;;;;;;;;;;;;oCAOZ,GAAU;;;;mCAAf,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;yBAaD,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAzBJ,MAAI;;;;;;sCAYZ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAleD,kBAAkB,CAAC,EAAE,EAAE,OAAO;;;aAgHvB,SAAS,CAAC,SAAS;aACxB,SAAS;WACX,KAAK;;;OAIN,OAAO,CAAC,GAAG,CAAC,mCAAmC;;;;aAqC9C,sBAAsB,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU;;SAEzD,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;UACrD,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;cAClD,IAAI;;;;YAGZ,KAAK;;;aA6BP,MAAM,CAAC,EAAE;SACV,IAAI,GAAG,EAAE,CAAC,qBAAqB;MACnC,UAAU,GAAG,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,UAAU;MACtE,SAAS,GAAG,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS;;;MAC3D,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS;MAAE,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,UAAU;;;;;;;;WA7wB9D,MAAM;MACR,WAAW,CAAC,CAAC,EAAE,CAAC;OACZ,IAAI,CAAC,CAAC,GAAG,CAAC;OACV,IAAI,CAAC,CAAC,GAAG,CAAC;;;MAEd,GAAG,CAAC,CAAC;OACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;OACb,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;;MAEjB,GAAG,CAAC,CAAC;OACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;OACb,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;;MAEjB,KAAK,CAAC,CAAC;OACH,IAAI,CAAC,CAAC,IAAI,CAAC;OACX,IAAI,CAAC,CAAC,IAAI,CAAC;;;MAEf,QAAQ,CAAC,CAAC;cACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC,CAAC;;;;;;;WAKtE,OAAO,IAAI,KAAK,EAAE,IAAI,KAAK,KAAK,CAAC,MAAM;OAAE,MAAM,EAAE,IAAI;OACvD,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI;cAClB,MAAM;;;;;WAGX,6BAA6B,GAAI,IAAI;cAC/B,IAAI;YACP,KAAK;YACL,KAAK;YACL,MAAM;YACN,IAAI;YACJ,KAAK;YACL,SAAS;YACT,QAAQ;eACF,IAAI;;eAGJ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAiChB,UAAU;;;;;;;;;;;;;;;;SAkBV,KAAK;;SAIL,UAAU,GAAG,CAAC;SAEd,aAAa;SACb,YAAY;SACZ,YAAY;SAEZ,WAAW;SAEX,SAAS,GAAG,KAAK;SACjB,gBAAgB;SAEhB,KAAK,GAAG,CAAC;SACT,SAAS,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC;SAC3B,UAAU,GAAG,KAAK;SAClB,UAAU;SACV,UAAU;SAEV,cAAc;SAEd,cAAc;SACd,aAAa;SACb,WAAW;SAEX,gBAAgB;;;SAGhB,WAAW,GAAG,KAAK;;SACnB,gBAAgB,GAAG,KAAK;SACxB,SAAS,GAAG,IAAI;SAChB,cAAc;SACd,YAAY;WAEL,YAAY;;KAEvB,OAAO;;MAEH,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY;;MAC1C,IAAI,CAAa;;;;cAIZ,SAAS,CAAC,KAAK;MACpB,OAAO,CAAC,GAAG,CAAC,OAAO;;;UAEf,KAAK,CAAC,MAAM,KAAK,CAAC;;WAEd,SAAS;;wBAET,UAAU,OAAO,UAAU,EAAE,gBAAgB;;wBAC7C,SAAS,GAAG,KAAK;mBACT,WAAW,IAAI,SAAS;;QAEhC,WAAW,GAAG,IAAI;;;YAEd,eAAe,GAAG,MAAM,CAAC,YAAY;;QACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;QAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;wBAC/B,cAAc,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;yBACzH,YAAY,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;;;;OAK3H,UAAU,GAAG,IAAI;;OACjB,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK;;;;cAG/C,OAAO,CAAC,KAAK;MAClB,OAAO,CAAC,GAAG,CAAC,eAAe;;;UAEvB,KAAK,CAAC,MAAM,KAAK,CAAC;WACd,cAAc,KAAK,WAAW;;QAE9B,cAAc;;;QAGd,gBAAgB,CAAC,IAAI,CAAC,aAAa;;QACnC,YAAY,CAAC,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,IAAI;;;;kBAIvD,WAAW;;QAKhB,cAAc;;;WAEd,WAAW;QAEX,WAAW,GAAG,KAAK;;YAEf,gBAAgB;aACZ,eAAe,GAAG,MAAM,CAAC,YAAY;SACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;SAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;0BAC/B,YAAY,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;yBACvH,gBAAgB,GAAG,KAAK;;;SAGxB,qBAAqB,CAAC,cAAc,EAAE,YAAY;;;;;OAK1D,cAAc,GAAG,KAAK;;;UAEtB,KAAK,CAAC,MAAM,KAAK,CAAC;;OAElB,UAAU,GAAG,KAAK;;OAClB,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK;OAEhD,UAAU,CAAC,GAAG,CAAC,UAAU;OACzB,SAAS,CAAC,GAAG,CAAC,UAAU;OAExB,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI;OACpE,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI;;;;cAGlE,SAAS,CAAC,KAAK;;MAEpB,aAAa,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK;;;UAE/C,SAAS;;WAEL,eAAe,GAAG,MAAM,CAAC,YAAY;;OACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;OAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;WAC3B,OAAO,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;uBACtH,gBAAgB,CAAC,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE;;;;UAGvH,MAAM;WACF,eAAe,GAAG,MAAM,CAAC,YAAY;OACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;OAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;WAC3B,OAAO,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;wBACtH,WAAW,CAAC,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;;;;UAGpD,UAAU;OACV,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK;WAE5C,WAAW,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;OAEvD,WAAW,CAAC,GAAG,CAAC,UAAU;OAC1B,SAAS,CAAC,GAAG,CAAC,WAAW;OAEzB,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI;OACpE,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI;OAEnE,UAAU,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;;;;UAGlD,cAAc;;WAEV,aAAa,GAAG,KAAK;;gBAChB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;YACtC,gBAAgB,CAAC,CAAC,MAAM,aAAa,EACrC,aAAa,GAAG,IAAI;;;;OAI5B,WAAW,GAAG,IAAI;;WAEd,aAAa;iBACJ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;SAC1C,YAAY,CAAC,gBAAgB,CAAC,CAAC,GAAG,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE;;;;YAIxI,eAAe,GAAG,MAAM,CAAC,YAAY;;QACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;QAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;YAC3B,OAAO,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;QACtH,YAAY,CAAC,aAAa,EAAE,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAI,GAAG,IAAI,EAAE;;;;;;;;;;;UAWtI,WAAW,KAAK,cAAc;;WAE1B,cAAc,CAAC,QAAQ,CAAC,YAAY,IAAI,EAAE;wBAC1C,gBAAgB,GAAG,IAAI;;;WAGvB,eAAe,GAAG,MAAM,CAAC,YAAY;OACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;OAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;wBAC/B,YAAY,OAAO,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;;;;cAItH,WAAW,CAAC,KAAK;UAClB,KAAK,CAAC,GAAG,KAAK,GAAG;;WACb,KAAK,GAAG,CAAC,EACT,KAAK,IAAI,IAAI;iBAEZ,KAAK,CAAC,GAAG,KAAK,GAAG;;WAClB,KAAK,GAAG,IAAI,EACZ,KAAK,IAAI,IAAI;;;MAErB,QAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG;;;UAGzE,KAAK,CAAC,OAAO,KAAK,EAAE;OACpB,OAAO,CAAC,GAAG,CAAC,QAAQ;OACpB,WAAW;;;;cAIV,YAAY,CAAC,EAAE;UAChB,SAAS;;eAEJ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;WAC3B,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;QAClB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE;;;WAE1B,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;QACrB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK;;;;aAG9B,SAAS;;;cAGJ,OAAO,CAAC,QAAQ;;UAExB,eAAe,GAAG,MAAM,CAAC,YAAY;;MACzC,eAAe,CAAC,IAAI,IAAK,CAAC,GAAC,KAAK;MAChC,eAAe,CAAC,GAAG,IAAK,CAAC,GAAC,KAAK;;;sBAE/B,SAAS,GAAG,IAAI;;;sBAEhB,gBAAgB;OACZ,EAAE,EAAE,UAAU,CAAC,QAAQ;OACvB,MAAM;OACN,aAAa,GAAG,CAAC;OACjB,QAAQ,MAAM,MAAM,CAAE,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,EAAG,CAAC,GAAC,KAAK,GAAI,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG;OAClH,KAAK,IACD,aAAa,EAAE,KAAK;;;;cAIpB,QAAQ;YACX,KAAK;wBACN,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,KAAK;wBAC7B,gBAAgB,CAAC,KAAK,GAAG,sBAAsB;;YAE9C,MAAM;wBACP,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,MAAM;wBAC9B,gBAAgB,CAAC,KAAK,GAAG,uBAAuB;;YAE/C,KAAK;wBACN,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC;wBAC/B,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,KAAK;wBAC7B,gBAAgB,CAAC,KAAK,GAAG,sBAAsB;;YAE9C,IAAI;wBACL,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,IAAI;wBAC5B,gBAAgB,CAAC,KAAK,GAAG,qBAAqB;;YAE7C,KAAK;wBACN,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,KAAK;wBAC7B,gBAAgB,CAAC,KAAK,GAAG,sBAAsB;;YAE9C,KAAK;wBACN,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,KAAK;wBAC7B,gBAAgB,CAAC,KAAK,GAAG,sBAAsB;;YAE9C,QAAQ;wBACT,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS;wBAC1B,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,QAAQ;wBAChC,gBAAgB,CAAC,KAAK,GAAG,sBAAsB;;YAE9C,OAAO;wBACR,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC;wBAC/B,gBAAgB,CAAC,UAAU;wBAC3B,gBAAgB,CAAC,IAAI,GAAG,OAAO;wBAC/B,gBAAgB,CAAC,KAAK,GAAG,mBAAmB;;YAE3C,QAAQ;wBACT,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC;wBAClC,gBAAgB,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC;wBACnC,gBAAgB,CAAC,IAAI,GAAG,QAAQ;wBAChC,gBAAgB,CAAC,KAAK,GAAG,mBAAmB;;YAE3C,QAAQ;wBACT,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;wBACpD,gBAAgB,CAAC,UAAU,IAAI,CAAC;wBAChC,gBAAgB,CAAC,IAAI,GAAG,QAAQ;wBAChC,gBAAgB,CAAC,KAAK,GAAG,mBAAmB;;YAE3C,SAAS;wBACV,gBAAgB,CAAC,QAAQ,GAAG,CAAC;wBAC7B,gBAAgB,CAAC,SAAS,GAAG,CAAC;wBAC9B,gBAAgB,CAAC,SAAS,IAAI,CAAC;wBAC/B,gBAAgB,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;wBACrD,gBAAgB,CAAC,IAAI,GAAG,SAAS;wBACjC,gBAAgB,CAAC,KAAK,GAAG,mBAAmB;;;QAG5C,OAAO,CAAC,GAAG,CAAC,sBAAsB;;;;;;;;MAMtC,UAAU;;;cAGE,WAAW;;;YAIjB,2BAA2B,GAAI,EAAE;gBAC1B,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;YAChC,UAAU,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,SAChB,CAAC;;;;YAId,cAAc,GAAI,EAAE;gBACb,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC3B,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;;SAElB,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM;;;SAEnC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;;gBACV,CAAC;;;YAER,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK,EAAE;;SAErB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;;gBACV,CAAC;;;;cAGT,CAAC;;;YAGN,WAAW,GAAI,EAAE;;cAEZ,cAAc,CAAC,EAAE;;;;;WAEpB,KAAK,GAAG,2BAA2B,CAAC,EAAE;;OAC1C,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;;eAGrB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;OAC1C,WAAW,CAAC,gBAAgB,CAAC,CAAC;;;MAGlC,gBAAgB;;;;;;;;;;cASX,YAAY,CAAC,EAAE;eACX,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;WAChC,UAAU,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;eAChB,UAAU,CAAC,CAAC;;;;;SAK3B,MAAM,GAAG,KAAK;SACd,WAAW;;cAGC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE;;UAErD,MAAM;WACF,WAAW,CAAC,EAAE,KAAK,EAAE;yBACrB,MAAM,GAAG,KAAK;;;;;MAKtB,SAAS,GAAG,KAAK;;;UAGb,SAAS,GAAG,YAAY,CAAC,EAAE;;uBAE/B,MAAM,GAAG,IAAI;UAET,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC,YAAY;;uBACxD,WAAW;OACP,QAAQ,MAAM,MAAM,CAAC,KAAK,EAAE,KAAK;OACjC,MAAM,MAAM,MAAM,CAAC,KAAK,EAAE,KAAK;OAC3B,EAAE;OACN,KAAK,EAAE,YAAY;OACnB,KAAK,GAAG,aAAa;OACrB,KAAK,EAAE,SAAS,CAAC,UAAU,CAAC,YAAY;;;;cAMhC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE;MACvD,OAAO,CAAC,GAAG,CAAC,gBAAgB;;;UAExB,MAAM;;WAEF,WAAW,CAAC,KAAK,KAAK,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,WAAW;;;;;wBAIhE,MAAM,GAAG,KAAK;wBACd,WAAW,CAAC,MAAM,OAAO,MAAM,CAAC,KAAK,EAAE,KAAK;wBAC5C,WAAW,CAAC,KAAK,GAAG,EAAE;uBACtB,KAAK,OAAO,KAAK,EAAE,WAAW;;;gBAErB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;YAChC,UAAU,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;;;UACvB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,WAAW;WAAK,OAAO,EAAE,WAAW,CAAC,EAAE;WAAE,KAAK,EAAE,WAAW,CAAC,KAAK;;;;;;;OAI9F,SAAS,GAAG,IAAI;;;;SAIpB,YAAY;;cAEP,WAAW,CAAC,EAAE;MACnB,OAAO,CAAC,GAAG,CAAC,cAAc;;;MAE1B,cAAc,GAAG,IAAI;;MACrB,aAAa,GAAG,EAAE;MAClB,WAAW,GAAG,KAAK;;;cAGd,YAAY,CAAC,EAAE;;UAEhB,YAAY,CAAC,EAAE,EAAE,IAAI,KAAK,QAAQ;;YAE7B,WAAW,EACZ,WAAW,CAAC,EAAE;;;MAGtB,OAAO,CAAC,GAAG,CAAC,eAAe;;;;cAmBtB,aAAa;WACb,6BAA6B,CAAC,YAAY,CAAC,IAAI;;;UAGhD,YAAY,CAAC,IAAI,KAAK,SAAS;;wBAE/B,YAAY,CAAC,SAAS,IAAI,CAAC;;;wBAE3B,YAAY,CAAC,UAAU,OAAO,YAAY,CAAC,UAAU,EAAE,CAAC;;;wBAExD,YAAY,CAAC,SAAS,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;iBAElD,YAAY,CAAC,IAAI,KAAK,QAAQ;;wBAEnC,YAAY,CAAC,QAAQ,IAAI,CAAC;;;wBAE1B,YAAY,CAAC,SAAS,OAAO,YAAY,CAAC,SAAS,EAAE,CAAC;;;wBAEtD,YAAY,CAAC,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;;;wBAIzD,YAAY,CAAC,QAAQ,IAAI,CAAC;;;wBAE1B,YAAY,CAAC,SAAS,OAAO,YAAY,CAAC,SAAS,EAAE,CAAC;;;;;;;cAQrD,aAAa;WACb,6BAA6B,CAAC,YAAY,CAAC,IAAI;;;UAGhD,YAAY,CAAC,QAAQ,KAAK,CAAC;;;UAG3B,YAAY,CAAC,IAAI,KAAK,SAAS;;wBAE/B,YAAY,CAAC,SAAS,IAAI,CAAC;;;OAE3B,YAAY,CAAC,UAAU,CAAC,GAAG;;;;;wBAG3B,YAAY,CAAC,SAAS,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;iBAElD,YAAY,CAAC,IAAI,KAAK,QAAQ;;wBAEnC,YAAY,CAAC,QAAQ,IAAI,CAAC;;;OAE1B,YAAY,CAAC,SAAS,CAAC,GAAG;;;;;wBAG1B,YAAY,CAAC,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;;;wBAIzD,YAAY,CAAC,QAAQ,IAAI,CAAC;;;OAE1B,YAAY,CAAC,SAAS,CAAC,GAAG;;;;;;;;;cAQlB,UAAU;;MAEtB,OAAO,CAAC,GAAG,CAAC,aAAa;;MACzB,OAAO,CAAC,GAAG,CAAC,oBAAoB;MAChC,OAAO,CAAC,GAAG,CAAC,UAAU;MACtB,OAAO,CAAC,GAAG,CAAC,eAAe;MAC3B,OAAO,CAAC,GAAG,CAAC,KAAK;;;cAGL,UAAU;;YAEhB,eAAe,GAAG,OAAO,CAAC,UAAU,EAAE,IAAI;;;eAEvC,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS;gBACnC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;QACpB,QAAQ,CAAC,UAAU,EAAE,eAAe;;;;;eAInC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;YAChC,UAAU,CAAC,CAAC,EAAE,EAAE,KAAK,KAAK,CAAC,CAAC,EAAE,EAAE;yBAChC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK;;;;;;;;eAOjE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;;;;;cAenC,qBAAqB,CAAC,QAAQ,EAAE,WAAW;;;UAG5C,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,EACvE,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;;UACvD,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,EACvE,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;;;MAG3D,gBAAgB,OAAO,KAAK;;;;;eAKnB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;WAChC,MAAM,GAAG,sBAAsB,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,EAAE,QAAQ;WAC9D,MAAM,GAAG,sBAAsB,CAAC,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;WAC1G,MAAM,GAAG,sBAAsB,CAAC,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;WAC/G,MAAM,GAAG,sBAAsB,CAAC,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE;;WAC1G,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM;QACpC,gBAAgB,OAAO,gBAAgB,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE;;;;;eAKxD,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;OAC1C,YAAY,CAAC,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,IAAI;;;;;;;cAiB3D,cAAc;;UAEf,gBAAgB,CAAC,MAAM,GAAG,CAAC;;gBAElB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAC1C,YAAY,CAAC,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,KAAK;;;;OAGjE,gBAAgB;;;;;;;;cAOf,WAAW,CAAC,EAAE;MACnB,OAAO,CAAC,GAAG,CAAC,QAAQ;UAChB,IAAI,GAAG,YAAY,CAAC,EAAE;UACtB,IAAI,CAAC,aAAa,CAAC,CAAC,GACpB,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,OAEzB,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;;;MAE7B,UAAU;;;WAUR,SAAS;MACX,KAAK,EAAE,sBAAsB;MAC7B,MAAM,EAAE,uBAAuB;MAC/B,KAAK,EAAE,sBAAsB;MAC7B,IAAI,EAAE,qBAAqB;MAC3B,KAAK,EAAE,sBAAsB;MAC7B,KAAK,EAAE,sBAAsB;MAC7B,QAAQ,EAAE,sBAAsB;MAChC,OAAO,EAAE,mBAAmB;;;cAGvB,sBAAsB,CAAC,QAAQ;;UAEhC,IAAI,GAAG,QAAQ,CAAC,KAAK;;MACzB,UAAU,GAAG,QAAQ,CAAC,UAAU;;;sBAGhC,UAAU;;MAEV,OAAO,CAAC,GAAG,CAAC,IAAI;;;eAGP,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;WAC1B,YAAY;QACZ,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;QACd,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM;QAC7B,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM;QAC9B,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI;QACvB,UAAU,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI;QACxB,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI;QAClB,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE;QAClB,aAAa;QACb,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG;QACrB,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI;QAC7B,KAAK,IACD,aAAa,EAAE,KAAK;;;gBAGnB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,IACtC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;OACrC,UAAU,CAAC,IAAI,CAAC,YAAY;;;;sBAIhC,KAAK;;YAEC,WAAW,IAAI,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO;;WAG7C,GAAG,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC;;WAErB,OAAO;QACP,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;QAGrC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;;WAGrC,KAAK,KAAK,CAAC;QACX,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;;;QAIpC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC;;;cAG1C,GAAG;;;eAGL,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;gBAC3B,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;YAC1C,OAAO;;SAEP,QAAQ,EAAE,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,OAAO,GAAG,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK;SAClK,MAAM,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI;SACvE,EAAE,EAAE,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,OAAO;SACnC,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE;SACvB,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK;SACpC,KAAK;SACL,KAAK,EAAE,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;;;;iBAG3B,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,IACpD,OAAO,CAAC,IAAI,CAAC,CAAC;;QAElB,KAAK,CAAC,IAAI,CAAC,OAAO;;;;MAI1B,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,UAAU;;;;;;;;cAOrC,IAAI,CAAC,QAAQ;MACzB,KAAK,CAAC,gCAAgC;OAClC,OAAO,IACH,cAAc,EAAC,kBAAkB;OAErC,MAAM,EAAE,MAAM;OACd,IAAI,EAAE,IAAI,CAAC,SAAS,GAChB,QAAQ,EAAE,YAAY;SAE3B,IAAI,CAAC,GAAG;cACA,GAAG,CAAC,IAAI;SAChB,IAAI,CAAC,GAAG;OACP,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG;;;OAE9C,sBAAsB,CAAC,GAAG,CAAC,IAAI;SAChC,KAAK,CAAC,KAAK;;;;;cAIF,IAAI;;;;UAIZ,QAAQ;;eACH,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;WAChC,KAAK;QACL,IAAI,EAAK,UAAU,CAAC,CAAC,EAAE,EAAE;QACzB,MAAM,EAAG,UAAU,CAAC,CAAC,EAAE,SAAS;QAChC,MAAM,EAAG,UAAU,CAAC,CAAC,EAAE,UAAU;QACjC,MAAM,EAAG,UAAU,CAAC,CAAC,EAAE,IAAI;QAC3B,IAAI,EAAK,UAAU,CAAC,CAAC,EAAE,MAAM;QAC7B,KAAK,EAAI,UAAU,CAAC,CAAC,EAAE,QAAQ;;;OAGnC,QAAQ,OAAO,QAAQ,EAAE,KAAK;;;UAG9B,mBAAmB,KACnB,KAAK,EAAE,QAAQ,EACH,UAAU;MAG1B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,mBAAmB;;MAEjD,KAAK,CAAC,gCAAgC;OAClC,OAAO,IACH,cAAc,EAAC,kBAAkB;OAErC,MAAM,EAAE,MAAM;OACd,IAAI,EAAE,IAAI,CAAC,SAAS;QAChB,QAAQ,EAAE,YAAY;QACtB,UAAU,EAAE,mBAAmB;;SAEpC,IAAI,CAAC,GAAG;OACP,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG;;;;;;;;;;;;qBA6IpB,MAAM;;;;;;;OAzBT,YAAY;;;;;;;OAdb,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DCr1BtB,GAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wFAAZ,GAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA1J1B,WAAW;KACnB,KAAK,CAAC,SAAS;;;;;;SArCZ,MAAM;WAEC,gBAAgB;WACb,YAAY;;KAE1B,OAAO;;;YAGA,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ;;YAC1C,QAAQ,GAAG,OAAO,CAAC,sBAAsB;MAC7B,OAAO,CAAC;;;;YAWpB,gBAAgB,aAAY,CAAC;;OAE9B,CAAC,CAAC,OAAO;;OACT,CAAC,CAAC,OAAO;OACD,QAAQ,CAAC,qBAAqB,GAAG,KAAK;;;OAGlD,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB;;OACvD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc;;;;MAGpD,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB;;MACtD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO;;;cAO7B,oBAAoB;;;MAG5B,gBAAgB,CAAC,CAAC,EAAE,CAAC;;;;;;;;;iCA8EG,oBAAoB;mCAGpB,MAAM,CAAC,OAAO,CAAC,KAAK;mCAIpB,MAAM,CAAC,OAAO,CAAC,MAAM;mCAIrB,MAAM,CAAC,OAAO,CAAC,IAAI;mCAInB,MAAM,CAAC,OAAO,CAAC,KAAK;mCAIpB,MAAM,CAAC,OAAO,CAAC,KAAK;mCAIpB,MAAM,CAAC,OAAO,CAAC,KAAK;mCAMpB,MAAM,CAAC,OAAO,CAAC,QAAQ;mCAGvB,MAAM,CAAC,OAAO,CAAC,OAAO;mCAKtB,MAAM,CAAC,IAAI;oCAGX,MAAM,CAAC,IAAI;;;;OA6BY,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KC/LtD,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCCmEY,GAAQ,IAAC,IAAI;;;;;;;;oFAEhB,GAAc,iBAAC,GAAQ,IAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCALrB,GAAO,iBAAC,GAAQ,IAAC,QAAQ,gBAAzB,GAAO,iBAAC,GAAQ,IAAC,QAAQ;;;;;;;;;;;;2EAGjC,GAAQ,IAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAnEhC,OAAO;;;;WAIE,cAAc,GAAI,QAAQ;eACnB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;WAC7B,QAAQ,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO;eACZ,IAAI;;;;MAGnB,OAAO,CAAC,GAAG,CAAC,UAAU;aACf,KAAK;;;WAGL,QAAQ;WAER,OAAO;WAEP,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCCDb,GAAS,IAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;2EAAd,GAAS,IAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;KAlBtB,OAAO;;;;WAIO,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCCgFL,GAAM;;;;oCAAX,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAAC,GAAM;;;;mCAAX,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;;;sCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAIsB,GAAI;8BAAW,GAAQ,IAAC,gBAAgB;8CAAW,GAAwB;;;;;;;;;;;;;;;uEAA5D,GAAQ,IAAC,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAH9C,GAAK;;;;kCAEZ,GAAK,IAAC,OAAO;;;;sCAAlB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCAAC,GAAK,IAAC,OAAO;;;;qCAAlB,MAAI;;;;;;;;;;;;;;;;8BAAJ,MAAI;;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCALjB,GAAQ;;;;;;;;;;;;;;;;;;;;;;wBAAR,GAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA/EF,gBAAgB;WAChB,YAAY;SAEnB,QAAQ;;KAEf,OAAO;MACA,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;OAC1C,OAAO,CAAC,GAAG,CAAC,CAAC;;OACb,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG;QACb,OAAO,CAAC,GAAG,CAAC,GAAG;wBACf,QAAQ,GAAG,GAAG;;;;;SAKtB,MAAM;;OAEF,IAAI,EAAE,yBAAyB;OAC/B,OAAO;UAEC,IAAI,EAAE,WAAW,EACjB,QAAQ,EAAE,EAAE;UAGZ,IAAI,EAAE,UAAU,EAChB,QAAQ,EAAE,EAAE;UAEd,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;UAC1B,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE;;;;OAIhC,IAAI,EAAE,4BAA4B;OAClC,OAAO,KAEC,IAAI,EAAE,UAAU,EAChB,QAAQ,EAAE,EAAE,MAGZ,IAAI,EAAE,SAAS,EACf,QAAQ,EAAE,EAAE;;;;cAMnB,wBAAwB,CAAC,QAAQ;MACtC,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,QAAQ;;;MAGlD,gBAAgB,CAAC,KAAK,EAAE,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCCrCX,GAAQ;+BAAgB,GAAI;;;;;;;;;;;;;;;;;;wEAAJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cApB/C,QAAQ,CAAC,QAAQ,EAAE,OAAO;MAClC,KAAK,GAAG,QAAQ;sBAChB,IAAI,GAAG,OAAO;;;SAGX,KAAK,GAAG,CAAC;SACT,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRJ,UAAC,GAAG,GAAG,IAAI,GAAG,CAAC;IACpB,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI;IACtB,CAAC,KAAK,EAAE;IACR,EAAE,IAAI,EAAE,OAAO;IACf,EAAE;IACF,CAAC;;;;;;;;"}